// Code generated by goa v3.5.2, DO NOT EDIT.
//
// oAuth HTTP server types
//
// Command:
// $ goa gen api_crud/design

package server

import (
	oauth "api_crud/design/gen/o_auth"
)

// OAuthFoundResponseBody is the type of the "oAuth" service "oAuth" endpoint
// HTTP response body.
type OAuthFoundResponseBody struct {
	AccessToken *string `form:"access_token,omitempty" json:"access_token,omitempty" xml:"access_token,omitempty"`
	TokenType   *string `form:"token_type,omitempty" json:"token_type,omitempty" xml:"token_type,omitempty"`
	ExpiresIn   *int64  `form:"expires_in,omitempty" json:"expires_in,omitempty" xml:"expires_in,omitempty"`
	Success     *bool   `form:"success,omitempty" json:"success,omitempty" xml:"success,omitempty"`
}

// OAuthUnknownErrorResponseBody is the type of the "oAuth" service "oAuth"
// endpoint HTTP response body for the "unknown_error" error.
type OAuthUnknownErrorResponseBody struct {
	Err       string `form:"err" json:"err" xml:"err"`
	ErrorCode string `form:"error_code" json:"error_code" xml:"error_code"`
	Success   bool   `form:"success" json:"success" xml:"success"`
}

// OAuthInvalidScopesResponseBody is the type of the "oAuth" service "oAuth"
// endpoint HTTP response body for the "invalid_scopes" error.
type OAuthInvalidScopesResponseBody string

// OAuthUnauthorizedResponseBody is the type of the "oAuth" service "oAuth"
// endpoint HTTP response body for the "unauthorized" error.
type OAuthUnauthorizedResponseBody string

// NewOAuthFoundResponseBody builds the HTTP response body from the result of
// the "oAuth" endpoint of the "oAuth" service.
func NewOAuthFoundResponseBody(res *oauth.OAuthResponse) *OAuthFoundResponseBody {
	body := &OAuthFoundResponseBody{
		AccessToken: res.AccessToken,
		TokenType:   res.TokenType,
		ExpiresIn:   res.ExpiresIn,
		Success:     res.Success,
	}
	return body
}

// NewOAuthUnknownErrorResponseBody builds the HTTP response body from the
// result of the "oAuth" endpoint of the "oAuth" service.
func NewOAuthUnknownErrorResponseBody(res *oauth.UnknownError) *OAuthUnknownErrorResponseBody {
	body := &OAuthUnknownErrorResponseBody{
		Err:       res.Err,
		ErrorCode: res.ErrorCode,
		Success:   res.Success,
	}
	return body
}

// NewOAuthInvalidScopesResponseBody builds the HTTP response body from the
// result of the "oAuth" endpoint of the "oAuth" service.
func NewOAuthInvalidScopesResponseBody(res oauth.InvalidScopes) OAuthInvalidScopesResponseBody {
	body := OAuthInvalidScopesResponseBody(res)
	return body
}

// NewOAuthUnauthorizedResponseBody builds the HTTP response body from the
// result of the "oAuth" endpoint of the "oAuth" service.
func NewOAuthUnauthorizedResponseBody(res oauth.Unauthorized) OAuthUnauthorizedResponseBody {
	body := OAuthUnauthorizedResponseBody(res)
	return body
}

// NewOAuthOauthPayload builds a oAuth service oAuth endpoint payload.
func NewOAuthOauthPayload(clientID string, clientSecret string, grantType string) *oauth.OauthPayload {
	v := &oauth.OauthPayload{}
	v.ClientID = clientID
	v.ClientSecret = clientSecret
	v.GrantType = grantType

	return v
}
