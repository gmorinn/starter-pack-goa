// Code generated by goa v3.5.2, DO NOT EDIT.
//
// jwtToken endpoints
//
// Command:
// $ goa gen api_crud/design

package jwttoken

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "jwtToken" service endpoints.
type Endpoints struct {
	Signup  goa.Endpoint
	Signin  goa.Endpoint
	Refresh goa.Endpoint
}

// NewEndpoints wraps the methods of the "jwtToken" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		Signup:  NewSignupEndpoint(s),
		Signin:  NewSigninEndpoint(s),
		Refresh: NewRefreshEndpoint(s),
	}
}

// Use applies the given middleware to all the "jwtToken" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.Signup = m(e.Signup)
	e.Signin = m(e.Signin)
	e.Refresh = m(e.Refresh)
}

// NewSignupEndpoint returns an endpoint function that calls the method
// "signup" of service "jwtToken".
func NewSignupEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*SignupPayload)
		return s.Signup(ctx, p)
	}
}

// NewSigninEndpoint returns an endpoint function that calls the method
// "signin" of service "jwtToken".
func NewSigninEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*SigninPayload)
		return s.Signin(ctx, p)
	}
}

// NewRefreshEndpoint returns an endpoint function that calls the method
// "refresh" of service "jwtToken".
func NewRefreshEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*RefreshPayload)
		return s.Refresh(ctx, p)
	}
}
