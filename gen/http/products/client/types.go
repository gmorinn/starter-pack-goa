// Code generated by goa v3.5.2, DO NOT EDIT.
//
// products HTTP client types
//
// Command:
// $ goa gen api_crud/design

package client

import (
	products "api_crud/gen/products"

	goa "goa.design/goa/v3/pkg"
)

// GetAllProductsByCategoryResponseBody is the type of the "products" service
// "getAllProductsByCategory" endpoint HTTP response body.
type GetAllProductsByCategoryResponseBody struct {
	// Result is an array of object
	Products []*ResProductResponseBody `form:"products,omitempty" json:"products,omitempty" xml:"products,omitempty"`
	Success  *bool                     `form:"success,omitempty" json:"success,omitempty" xml:"success,omitempty"`
}

// GetProductResponseBody is the type of the "products" service "getProduct"
// endpoint HTTP response body.
type GetProductResponseBody struct {
	// Result is an object
	Product *ResProductResponseBody `form:"product,omitempty" json:"product,omitempty" xml:"product,omitempty"`
	Success *bool                   `form:"success,omitempty" json:"success,omitempty" xml:"success,omitempty"`
}

// GetAllProductsByCategoryUnknownErrorResponseBody is the type of the
// "products" service "getAllProductsByCategory" endpoint HTTP response body
// for the "unknown_error" error.
type GetAllProductsByCategoryUnknownErrorResponseBody struct {
	Err       *string `form:"err,omitempty" json:"err,omitempty" xml:"err,omitempty"`
	ErrorCode *string `form:"error_code,omitempty" json:"error_code,omitempty" xml:"error_code,omitempty"`
	Success   *bool   `form:"success,omitempty" json:"success,omitempty" xml:"success,omitempty"`
}

// GetProductUnknownErrorResponseBody is the type of the "products" service
// "getProduct" endpoint HTTP response body for the "unknown_error" error.
type GetProductUnknownErrorResponseBody struct {
	Err       *string `form:"err,omitempty" json:"err,omitempty" xml:"err,omitempty"`
	ErrorCode *string `form:"error_code,omitempty" json:"error_code,omitempty" xml:"error_code,omitempty"`
	Success   *bool   `form:"success,omitempty" json:"success,omitempty" xml:"success,omitempty"`
}

// ResProductResponseBody is used to define fields on response body types.
type ResProductResponseBody struct {
	ID       *string  `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
	Name     *string  `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	Price    *float64 `form:"price,omitempty" json:"price,omitempty" xml:"price,omitempty"`
	Cover    *string  `form:"cover,omitempty" json:"cover,omitempty" xml:"cover,omitempty"`
	Category *string  `form:"category,omitempty" json:"category,omitempty" xml:"category,omitempty"`
}

// NewGetAllProductsByCategoryResultOK builds a "products" service
// "getAllProductsByCategory" endpoint result from a HTTP "OK" response.
func NewGetAllProductsByCategoryResultOK(body *GetAllProductsByCategoryResponseBody) *products.GetAllProductsByCategoryResult {
	v := &products.GetAllProductsByCategoryResult{
		Success: *body.Success,
	}
	v.Products = make([]*products.ResProduct, len(body.Products))
	for i, val := range body.Products {
		v.Products[i] = unmarshalResProductResponseBodyToProductsResProduct(val)
	}

	return v
}

// NewGetAllProductsByCategoryUnknownError builds a products service
// getAllProductsByCategory endpoint unknown_error error.
func NewGetAllProductsByCategoryUnknownError(body *GetAllProductsByCategoryUnknownErrorResponseBody) *products.UnknownError {
	v := &products.UnknownError{
		Err:       *body.Err,
		ErrorCode: *body.ErrorCode,
		Success:   *body.Success,
	}

	return v
}

// NewGetProductResultOK builds a "products" service "getProduct" endpoint
// result from a HTTP "OK" response.
func NewGetProductResultOK(body *GetProductResponseBody) *products.GetProductResult {
	v := &products.GetProductResult{
		Success: *body.Success,
	}
	v.Product = unmarshalResProductResponseBodyToProductsResProduct(body.Product)

	return v
}

// NewGetProductUnknownError builds a products service getProduct endpoint
// unknown_error error.
func NewGetProductUnknownError(body *GetProductUnknownErrorResponseBody) *products.UnknownError {
	v := &products.UnknownError{
		Err:       *body.Err,
		ErrorCode: *body.ErrorCode,
		Success:   *body.Success,
	}

	return v
}

// ValidateGetAllProductsByCategoryResponseBody runs the validations defined on
// GetAllProductsByCategoryResponseBody
func ValidateGetAllProductsByCategoryResponseBody(body *GetAllProductsByCategoryResponseBody) (err error) {
	if body.Products == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("products", "body"))
	}
	if body.Success == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("success", "body"))
	}
	for _, e := range body.Products {
		if e != nil {
			if err2 := ValidateResProductResponseBody(e); err2 != nil {
				err = goa.MergeErrors(err, err2)
			}
		}
	}
	return
}

// ValidateGetProductResponseBody runs the validations defined on
// GetProductResponseBody
func ValidateGetProductResponseBody(body *GetProductResponseBody) (err error) {
	if body.Product == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("product", "body"))
	}
	if body.Success == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("success", "body"))
	}
	if body.Product != nil {
		if err2 := ValidateResProductResponseBody(body.Product); err2 != nil {
			err = goa.MergeErrors(err, err2)
		}
	}
	return
}

// ValidateGetAllProductsByCategoryUnknownErrorResponseBody runs the
// validations defined on getAllProductsByCategory_unknown_error_response_body
func ValidateGetAllProductsByCategoryUnknownErrorResponseBody(body *GetAllProductsByCategoryUnknownErrorResponseBody) (err error) {
	if body.Err == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("err", "body"))
	}
	if body.Success == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("success", "body"))
	}
	if body.ErrorCode == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("error_code", "body"))
	}
	return
}

// ValidateGetProductUnknownErrorResponseBody runs the validations defined on
// getProduct_unknown_error_response_body
func ValidateGetProductUnknownErrorResponseBody(body *GetProductUnknownErrorResponseBody) (err error) {
	if body.Err == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("err", "body"))
	}
	if body.Success == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("success", "body"))
	}
	if body.ErrorCode == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("error_code", "body"))
	}
	return
}

// ValidateResProductResponseBody runs the validations defined on
// resProductResponseBody
func ValidateResProductResponseBody(body *ResProductResponseBody) (err error) {
	if body.ID == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("id", "body"))
	}
	if body.Name == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("name", "body"))
	}
	if body.Price == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("price", "body"))
	}
	if body.Cover == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("cover", "body"))
	}
	if body.Category == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("category", "body"))
	}
	if body.ID != nil {
		err = goa.MergeErrors(err, goa.ValidateFormat("body.id", *body.ID, goa.FormatUUID))
	}
	return
}
