swagger: "2.0"
info:
  title: Basic CRUD
  description: Exemple for api crud
  version: "1.0"
host: localhost:8088
consumes:
- application/json
- application/xml
- application/gob
produces:
- application/json
- application/xml
- application/gob
paths:
  /book/{id}:
    get:
      tags:
      - crud
      summary: getBook crud
      description: Get one item
      operationId: crud#getBook
      parameters:
      - name: id
        in: path
        required: true
        type: string
        format: uuid
      - name: Authorization
        in: header
        description: JWT used for authentication
        required: false
        type: string
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/CrudGetBookResponseBody'
            required:
            - id
            - name
            - price
            - success
        "400":
          description: Bad Request response.
          schema:
            $ref: '#/definitions/CrudGetBookEmailAlreadyExistResponseBody'
            required:
            - message
            - success
        "401":
          description: Unauthorized response.
          schema:
            $ref: '#/definitions/CrudGetBookUnauthorizedResponseBody'
        "403":
          description: Forbidden response.
          schema:
            $ref: '#/definitions/CrudGetBookInvalidScopesResponseBody'
        "500":
          description: Internal Server Error response.
          schema:
            $ref: '#/definitions/CrudGetBookUnknownErrorResponseBody'
            required:
            - err
            - success
            - error_code
      schemes:
      - http
      security:
      - jwt_header_Authorization: []
    put:
      tags:
      - crud
      summary: updateBook crud
      description: Update one item
      operationId: crud#updateBook
      parameters:
      - name: id
        in: path
        required: true
        type: string
        format: uuid
      - name: UpdateBookRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/CrudUpdateBookRequestBody'
          required:
          - name
          - price
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/CrudUpdateBookResponseBody'
            required:
            - id
            - name
            - price
            - success
        "400":
          description: Bad Request response.
          schema:
            $ref: '#/definitions/CrudUpdateBookEmailAlreadyExistResponseBody'
            required:
            - message
            - success
        "401":
          description: Unauthorized response.
          schema:
            $ref: '#/definitions/CrudUpdateBookUnauthorizedResponseBody'
        "403":
          description: Forbidden response.
          schema:
            $ref: '#/definitions/CrudUpdateBookInvalidScopesResponseBody'
        "500":
          description: Internal Server Error response.
          schema:
            $ref: '#/definitions/CrudUpdateBookUnknownErrorResponseBody'
            required:
            - err
            - success
            - error_code
      schemes:
      - http
  /book/add:
    post:
      tags:
      - crud
      summary: createBook crud
      description: Create one item
      operationId: crud#createBook
      parameters:
      - name: CreateBookRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/CrudCreateBookRequestBody'
          required:
          - name
          - price
      responses:
        "201":
          description: Created response.
          schema:
            $ref: '#/definitions/CrudCreateBookResponseBody'
            required:
            - book
            - success
        "400":
          description: Bad Request response.
          schema:
            $ref: '#/definitions/CrudCreateBookEmailAlreadyExistResponseBody'
            required:
            - message
            - success
        "401":
          description: Unauthorized response.
          schema:
            $ref: '#/definitions/CrudCreateBookUnauthorizedResponseBody'
        "403":
          description: Forbidden response.
          schema:
            $ref: '#/definitions/CrudCreateBookInvalidScopesResponseBody'
        "500":
          description: Internal Server Error response.
          schema:
            $ref: '#/definitions/CrudCreateBookUnknownErrorResponseBody'
            required:
            - err
            - success
            - error_code
      schemes:
      - http
  /book/remove/{id}:
    delete:
      tags:
      - crud
      summary: deleteBook crud
      description: Delete one item by ID
      operationId: crud#deleteBook
      parameters:
      - name: id
        in: path
        required: true
        type: string
        format: uuid
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/CrudDeleteBookResponseBody'
            required:
            - success
        "400":
          description: Bad Request response.
          schema:
            $ref: '#/definitions/CrudDeleteBookEmailAlreadyExistResponseBody'
            required:
            - message
            - success
        "401":
          description: Unauthorized response.
          schema:
            $ref: '#/definitions/CrudDeleteBookUnauthorizedResponseBody'
        "403":
          description: Forbidden response.
          schema:
            $ref: '#/definitions/CrudDeleteBookInvalidScopesResponseBody'
        "500":
          description: Internal Server Error response.
          schema:
            $ref: '#/definitions/CrudDeleteBookUnknownErrorResponseBody'
            required:
            - err
            - success
            - error_code
      schemes:
      - http
  /books:
    get:
      tags:
      - crud
      summary: getAllBooks crud
      description: Read All items
      operationId: crud#getAllBooks
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/CrudGetAllBooksResponseBody'
            required:
            - books
            - success
        "400":
          description: Bad Request response.
          schema:
            $ref: '#/definitions/CrudGetAllBooksEmailAlreadyExistResponseBody'
            required:
            - message
            - success
        "401":
          description: Unauthorized response.
          schema:
            $ref: '#/definitions/CrudGetAllBooksUnauthorizedResponseBody'
        "403":
          description: Forbidden response.
          schema:
            $ref: '#/definitions/CrudGetAllBooksInvalidScopesResponseBody'
        "500":
          description: Internal Server Error response.
          schema:
            $ref: '#/definitions/CrudGetAllBooksUnknownErrorResponseBody'
            required:
            - err
            - success
            - error_code
      schemes:
      - http
  /openapi.json:
    get:
      tags:
      - openapi
      summary: Download openapi3.json
      operationId: openapi#/openapi.json
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
      schemes:
      - http
  /signin:
    post:
      tags:
      - crud
      summary: signin crud
      description: signin
      operationId: crud#signin
      parameters:
      - name: SigninRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/CrudSigninRequestBody'
          required:
          - password
          - email
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/CrudSigninResponseBody'
            required:
            - access_token
            - refresh_token
            - success
        "400":
          description: Bad Request response.
          schema:
            $ref: '#/definitions/CrudSigninEmailAlreadyExistResponseBody'
            required:
            - message
            - success
        "401":
          description: Unauthorized response.
          schema:
            $ref: '#/definitions/CrudSigninUnauthorizedResponseBody'
        "403":
          description: Forbidden response.
          schema:
            $ref: '#/definitions/CrudSigninInvalidScopesResponseBody'
        "500":
          description: Internal Server Error response.
          schema:
            $ref: '#/definitions/CrudSigninUnknownErrorResponseBody'
            required:
            - err
            - success
            - error_code
      schemes:
      - http
  /signup:
    post:
      tags:
      - crud
      summary: signup crud
      description: signup
      operationId: crud#signup
      parameters:
      - name: SignupRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/CrudSignupRequestBody'
          required:
          - firstname
          - lastname
          - password
          - email
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/CrudSignupResponseBody'
            required:
            - access_token
            - refresh_token
            - success
        "400":
          description: Bad Request response.
          schema:
            $ref: '#/definitions/CrudSignupEmailAlreadyExistResponseBody'
            required:
            - message
            - success
        "401":
          description: Unauthorized response.
          schema:
            $ref: '#/definitions/CrudSignupUnauthorizedResponseBody'
        "403":
          description: Forbidden response.
          schema:
            $ref: '#/definitions/CrudSignupInvalidScopesResponseBody'
        "500":
          description: Internal Server Error response.
          schema:
            $ref: '#/definitions/CrudSignupUnknownErrorResponseBody'
            required:
            - err
            - success
            - error_code
      schemes:
      - http
definitions:
  BookResponseResponseBody:
    title: BookResponseResponseBody
    type: object
    properties:
      id:
        type: string
        example: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
        format: uuid
      name:
        type: string
        example: Guillaume
      price:
        type: number
        example: 0.16196037412826506
        format: double
    example:
      id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
      name: Guillaume
      price: 0.19147719662531468
    required:
    - id
    - name
    - price
  CrudCreateBookEmailAlreadyExistResponseBody:
    title: CrudCreateBookEmailAlreadyExistResponseBody
    type: object
    properties:
      message:
        type: string
        example: Sit nihil dignissimos est consequatur quia.
      success:
        type: boolean
        default: false
        example: false
    description: When email already exist
    example:
      message: Vel ut et cumque.
      success: false
    required:
    - message
    - success
  CrudCreateBookIDDoesntExistResponseBody:
    title: CrudCreateBookIDDoesntExistResponseBody
    type: object
    properties:
      err:
        type: string
        description: Returning error
        example: Quia quam natus dolorem nesciunt.
      id:
        type: string
        example: Et a architecto officiis eum magni.
      success:
        type: boolean
        default: false
        example: true
    description: When ID doesn't exist
    example:
      err: Consectetur et et nihil ut qui et.
      id: Distinctio reiciendis quasi perspiciatis.
      success: false
    required:
    - err
    - success
    - id
  CrudCreateBookInvalidScopesResponseBody:
    title: CrudCreateBookInvalidScopesResponseBody
    type: string
    description: Token scopes are invalid
    example: Odio cumque minus qui.
  CrudCreateBookRequestBody:
    title: CrudCreateBookRequestBody
    type: object
    properties:
      name:
        type: string
        example: Guillaume
        minLength: 3
        maxLength: 10
      price:
        type: number
        example: 0.7158829429452753
        format: double
    example:
      name: Guillaume
      price: 0.6810453528626984
    required:
    - name
    - price
  CrudCreateBookResponseBody:
    title: CrudCreateBookResponseBody
    type: object
    properties:
      book:
        $ref: '#/definitions/BookResponseResponseBody'
      success:
        type: boolean
        example: false
    example:
      book:
        id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
        name: Guillaume
        price: 0.2692364234446434
      success: true
    required:
    - book
    - success
  CrudCreateBookUnauthorizedResponseBody:
    title: CrudCreateBookUnauthorizedResponseBody
    type: string
    description: Identifiers are invalid
    example: Ut quos assumenda dolorum.
  CrudCreateBookUnknownErrorResponseBody:
    title: CrudCreateBookUnknownErrorResponseBody
    type: object
    properties:
      err:
        type: string
        example: Quasi aspernatur dolor nam ipsum in a.
      error_code:
        type: string
        example: Quod eos incidunt quibusdam atque.
      success:
        type: boolean
        default: false
        example: true
    description: Error not identified (500)
    example:
      err: Autem a quas ut ea aut.
      error_code: Et unde quod.
      success: true
    required:
    - err
    - success
    - error_code
  CrudDeleteBookEmailAlreadyExistResponseBody:
    title: CrudDeleteBookEmailAlreadyExistResponseBody
    type: object
    properties:
      message:
        type: string
        example: Dicta veritatis dolor incidunt accusantium.
      success:
        type: boolean
        default: false
        example: true
    description: When email already exist
    example:
      message: Ipsum quo est iste quibusdam.
      success: true
    required:
    - message
    - success
  CrudDeleteBookIDDoesntExistResponseBody:
    title: CrudDeleteBookIDDoesntExistResponseBody
    type: object
    properties:
      err:
        type: string
        description: Returning error
        example: Non tempore molestiae quia.
      id:
        type: string
        example: Alias et et quibusdam distinctio sit.
      success:
        type: boolean
        default: false
        example: true
    description: When ID doesn't exist
    example:
      err: Eos asperiores.
      id: Ea culpa totam quisquam optio qui.
      success: false
    required:
    - err
    - success
    - id
  CrudDeleteBookInvalidScopesResponseBody:
    title: CrudDeleteBookInvalidScopesResponseBody
    type: string
    description: Token scopes are invalid
    example: Voluptatum rem consequatur dolores veniam.
  CrudDeleteBookResponseBody:
    title: CrudDeleteBookResponseBody
    type: object
    properties:
      success:
        type: boolean
        example: true
    example:
      success: true
    required:
    - success
  CrudDeleteBookUnauthorizedResponseBody:
    title: CrudDeleteBookUnauthorizedResponseBody
    type: string
    description: Identifiers are invalid
    example: Totam consequatur harum optio assumenda doloremque sit.
  CrudDeleteBookUnknownErrorResponseBody:
    title: CrudDeleteBookUnknownErrorResponseBody
    type: object
    properties:
      err:
        type: string
        example: Minima nemo et.
      error_code:
        type: string
        example: Blanditiis quis laudantium laboriosam culpa facilis.
      success:
        type: boolean
        default: false
        example: false
    description: Error not identified (500)
    example:
      err: Ipsa aut et nam nisi.
      error_code: Ipsam nobis corporis tempora.
      success: false
    required:
    - err
    - success
    - error_code
  CrudGetAllBooksEmailAlreadyExistResponseBody:
    title: CrudGetAllBooksEmailAlreadyExistResponseBody
    type: object
    properties:
      message:
        type: string
        example: Tempore dolorem tenetur.
      success:
        type: boolean
        default: false
        example: true
    description: When email already exist
    example:
      message: Consequatur eos repellat et fugit.
      success: false
    required:
    - message
    - success
  CrudGetAllBooksIDDoesntExistResponseBody:
    title: CrudGetAllBooksIDDoesntExistResponseBody
    type: object
    properties:
      err:
        type: string
        description: Returning error
        example: In ipsum.
      id:
        type: string
        example: Dolorum molestias voluptatum.
      success:
        type: boolean
        default: false
        example: true
    description: When ID doesn't exist
    example:
      err: Quis repellendus ut delectus distinctio quia et.
      id: Voluptate dignissimos aut rerum dolor.
      success: true
    required:
    - err
    - success
    - id
  CrudGetAllBooksInvalidScopesResponseBody:
    title: CrudGetAllBooksInvalidScopesResponseBody
    type: string
    description: Token scopes are invalid
    example: Et magnam.
  CrudGetAllBooksResponseBody:
    title: CrudGetAllBooksResponseBody
    type: object
    properties:
      books:
        type: array
        items:
          $ref: '#/definitions/BookResponseResponseBody'
        example:
        - id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
          name: Guillaume
          price: 0.2692364234446434
        - id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
          name: Guillaume
          price: 0.2692364234446434
        - id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
          name: Guillaume
          price: 0.2692364234446434
      success:
        type: boolean
        example: true
    example:
      books:
      - id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
        name: Guillaume
        price: 0.2692364234446434
      - id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
        name: Guillaume
        price: 0.2692364234446434
      - id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
        name: Guillaume
        price: 0.2692364234446434
      success: true
    required:
    - books
    - success
  CrudGetAllBooksUnauthorizedResponseBody:
    title: CrudGetAllBooksUnauthorizedResponseBody
    type: string
    description: Identifiers are invalid
    example: Recusandae voluptatem laudantium corporis ut.
  CrudGetAllBooksUnknownErrorResponseBody:
    title: CrudGetAllBooksUnknownErrorResponseBody
    type: object
    properties:
      err:
        type: string
        example: Quia suscipit.
      error_code:
        type: string
        example: Ad dolores aperiam.
      success:
        type: boolean
        default: false
        example: false
    description: Error not identified (500)
    example:
      err: Rerum consectetur corporis consequatur possimus.
      error_code: Nobis beatae eos praesentium dolores ut.
      success: false
    required:
    - err
    - success
    - error_code
  CrudGetBookEmailAlreadyExistResponseBody:
    title: CrudGetBookEmailAlreadyExistResponseBody
    type: object
    properties:
      message:
        type: string
        example: Repellat quia adipisci totam enim delectus et.
      success:
        type: boolean
        default: false
        example: true
    description: When email already exist
    example:
      message: Omnis et.
      success: false
    required:
    - message
    - success
  CrudGetBookIDDoesntExistResponseBody:
    title: CrudGetBookIDDoesntExistResponseBody
    type: object
    properties:
      err:
        type: string
        description: Returning error
        example: Velit rem.
      id:
        type: string
        example: Molestiae cumque officia cumque facere blanditiis.
      success:
        type: boolean
        default: false
        example: true
    description: When ID doesn't exist
    example:
      err: Quidem cupiditate excepturi sint.
      id: In ut nam fugiat dicta explicabo.
      success: true
    required:
    - err
    - success
    - id
  CrudGetBookInvalidScopesResponseBody:
    title: CrudGetBookInvalidScopesResponseBody
    type: string
    description: Token scopes are invalid
    example: Minus iure non est harum ad sequi.
  CrudGetBookResponseBody:
    title: CrudGetBookResponseBody
    type: object
    properties:
      id:
        type: string
        example: Dolorum ea voluptas.
      name:
        type: string
        example: Dolorem officiis necessitatibus nisi voluptatum debitis.
      price:
        type: number
        example: 0.6923152507017585
        format: double
      success:
        type: boolean
        example: false
    example:
      id: Autem qui vel quod fugit et animi.
      name: Ut mollitia tenetur.
      price: 0.2900222266458365
      success: true
    required:
    - id
    - name
    - price
    - success
  CrudGetBookUnauthorizedResponseBody:
    title: CrudGetBookUnauthorizedResponseBody
    type: string
    description: Identifiers are invalid
    example: Sed provident soluta molestiae illum autem adipisci.
  CrudGetBookUnknownErrorResponseBody:
    title: CrudGetBookUnknownErrorResponseBody
    type: object
    properties:
      err:
        type: string
        example: Eos incidunt et fuga.
      error_code:
        type: string
        example: Reprehenderit dolore a minus animi reiciendis.
      success:
        type: boolean
        default: false
        example: true
    description: Error not identified (500)
    example:
      err: Voluptas beatae dolor.
      error_code: Officiis incidunt maxime sequi sit.
      success: false
    required:
    - err
    - success
    - error_code
  CrudSigninEmailAlreadyExistResponseBody:
    title: CrudSigninEmailAlreadyExistResponseBody
    type: object
    properties:
      message:
        type: string
        example: Quia dolor rem unde sint.
      success:
        type: boolean
        default: false
        example: false
    description: When email already exist
    example:
      message: Placeat nesciunt quidem omnis optio debitis.
      success: true
    required:
    - message
    - success
  CrudSigninIDDoesntExistResponseBody:
    title: CrudSigninIDDoesntExistResponseBody
    type: object
    properties:
      err:
        type: string
        description: Returning error
        example: Rerum id quia ut reprehenderit modi voluptas.
      id:
        type: string
        example: Laborum qui unde ullam maxime maxime voluptatum.
      success:
        type: boolean
        default: false
        example: false
    description: When ID doesn't exist
    example:
      err: Nihil reiciendis.
      id: Sed voluptatem eos sequi vitae vitae.
      success: true
    required:
    - err
    - success
    - id
  CrudSigninInvalidScopesResponseBody:
    title: CrudSigninInvalidScopesResponseBody
    type: string
    description: Token scopes are invalid
    example: Aut harum repellat dignissimos.
  CrudSigninRequestBody:
    title: CrudSigninRequestBody
    type: object
    properties:
      email:
        type: string
        example: guillaume@epitech.eu
        format: email
      password:
        type: string
        example: ne7
        minLength: 8
    example:
      email: guillaume@epitech.eu
      password: dwp
    required:
    - password
    - email
  CrudSigninResponseBody:
    title: CrudSigninResponseBody
    type: object
    properties:
      access_token:
        type: string
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      refresh_token:
        type: string
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      success:
        type: boolean
        example: false
    example:
      access_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      refresh_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      success: false
    required:
    - access_token
    - refresh_token
    - success
  CrudSigninUnauthorizedResponseBody:
    title: CrudSigninUnauthorizedResponseBody
    type: string
    description: Identifiers are invalid
    example: Tenetur eos odio sed.
  CrudSigninUnknownErrorResponseBody:
    title: CrudSigninUnknownErrorResponseBody
    type: object
    properties:
      err:
        type: string
        example: Dolorem nisi laborum sit nam.
      error_code:
        type: string
        example: Eos a porro.
      success:
        type: boolean
        default: false
        example: false
    description: Error not identified (500)
    example:
      err: Sit rem.
      error_code: Nam consequatur et maxime.
      success: false
    required:
    - err
    - success
    - error_code
  CrudSignupEmailAlreadyExistResponseBody:
    title: CrudSignupEmailAlreadyExistResponseBody
    type: object
    properties:
      message:
        type: string
        example: Autem nesciunt consectetur.
      success:
        type: boolean
        default: false
        example: false
    description: When email already exist
    example:
      message: Vel ipsa recusandae tenetur.
      success: true
    required:
    - message
    - success
  CrudSignupIDDoesntExistResponseBody:
    title: CrudSignupIDDoesntExistResponseBody
    type: object
    properties:
      err:
        type: string
        description: Returning error
        example: Eum et nam voluptas maxime facilis.
      id:
        type: string
        example: Voluptatem eius iusto dignissimos.
      success:
        type: boolean
        default: false
        example: true
    description: When ID doesn't exist
    example:
      err: Molestias possimus sunt voluptas nihil tenetur eos.
      id: Eius nihil.
      success: true
    required:
    - err
    - success
    - id
  CrudSignupInvalidScopesResponseBody:
    title: CrudSignupInvalidScopesResponseBody
    type: string
    description: Token scopes are invalid
    example: Beatae voluptas.
  CrudSignupRequestBody:
    title: CrudSignupRequestBody
    type: object
    properties:
      email:
        type: string
        example: guillaume@epitech.eu
        format: email
      firstname:
        type: string
        example: Guillaume
        minLength: 3
        maxLength: 15
      lastname:
        type: string
        example: Morin
        minLength: 3
      password:
        type: string
        example: 6nz
        minLength: 8
    description: Use client ID and client secret to oAuth
    example:
      email: guillaume@epitech.eu
      firstname: Guillaume
      lastname: Morin
      password: a9r
    required:
    - firstname
    - lastname
    - password
    - email
  CrudSignupResponseBody:
    title: CrudSignupResponseBody
    type: object
    properties:
      access_token:
        type: string
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      refresh_token:
        type: string
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      success:
        type: boolean
        example: true
    example:
      access_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      refresh_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      success: false
    required:
    - access_token
    - refresh_token
    - success
  CrudSignupUnauthorizedResponseBody:
    title: CrudSignupUnauthorizedResponseBody
    type: string
    description: Identifiers are invalid
    example: Sunt odit aliquam quia.
  CrudSignupUnknownErrorResponseBody:
    title: CrudSignupUnknownErrorResponseBody
    type: object
    properties:
      err:
        type: string
        example: Provident ipsam rerum sapiente commodi.
      error_code:
        type: string
        example: Repellat assumenda ut iure.
      success:
        type: boolean
        default: false
        example: false
    description: Error not identified (500)
    example:
      err: Adipisci consequatur velit corrupti architecto accusamus.
      error_code: Dolor atque odit.
      success: true
    required:
    - err
    - success
    - error_code
  CrudUpdateBookEmailAlreadyExistResponseBody:
    title: CrudUpdateBookEmailAlreadyExistResponseBody
    type: object
    properties:
      message:
        type: string
        example: Numquam eos laborum non.
      success:
        type: boolean
        default: false
        example: true
    description: When email already exist
    example:
      message: Voluptas alias.
      success: true
    required:
    - message
    - success
  CrudUpdateBookIDDoesntExistResponseBody:
    title: CrudUpdateBookIDDoesntExistResponseBody
    type: object
    properties:
      err:
        type: string
        description: Returning error
        example: Rerum est tenetur molestias aut culpa nobis.
      id:
        type: string
        example: Nulla eos.
      success:
        type: boolean
        default: false
        example: true
    description: When ID doesn't exist
    example:
      err: Voluptas odit veniam quaerat sint consequatur.
      id: Autem facere ad non.
      success: false
    required:
    - err
    - success
    - id
  CrudUpdateBookInvalidScopesResponseBody:
    title: CrudUpdateBookInvalidScopesResponseBody
    type: string
    description: Token scopes are invalid
    example: Est cumque dolorum fugiat.
  CrudUpdateBookRequestBody:
    title: CrudUpdateBookRequestBody
    type: object
    properties:
      name:
        type: string
        example: Guillaume
      price:
        type: number
        example: 0.4189841669177319
        format: double
    example:
      name: Guillaume
      price: 0.8101171082310289
    required:
    - name
    - price
  CrudUpdateBookResponseBody:
    title: CrudUpdateBookResponseBody
    type: object
    properties:
      id:
        type: string
        example: Id sed consequatur occaecati sed.
      name:
        type: string
        example: Odio et dignissimos aliquid ea inventore.
      price:
        type: number
        example: 0.2670335353665682
        format: double
      success:
        type: boolean
        example: true
    example:
      id: Omnis ratione est.
      name: Iusto enim ad excepturi.
      price: 0.798046265194759
      success: true
    required:
    - id
    - name
    - price
    - success
  CrudUpdateBookUnauthorizedResponseBody:
    title: CrudUpdateBookUnauthorizedResponseBody
    type: string
    description: Identifiers are invalid
    example: Pariatur autem.
  CrudUpdateBookUnknownErrorResponseBody:
    title: CrudUpdateBookUnknownErrorResponseBody
    type: object
    properties:
      err:
        type: string
        example: Et et.
      error_code:
        type: string
        example: Est quas atque.
      success:
        type: boolean
        default: false
        example: true
    description: Error not identified (500)
    example:
      err: Est et quia et est.
      error_code: Voluptate molestiae et excepturi aut debitis voluptatem.
      success: true
    required:
    - err
    - success
    - error_code
securityDefinitions:
  jwt_header_Authorization:
    type: apiKey
    description: |-
      Secures endpoint by requiring a valid JWT token retrieved via the signin endpoint. Supports scopes "api:read" and "api:write".

      **Security Scopes**:
        * `api:read`: Read-only access
        * `api:write`: Read and write access
    name: Authorization
    in: header
