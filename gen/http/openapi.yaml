swagger: "2.0"
info:
  title: Basic CRUD
  description: Exemple for api crud
  version: "1.0"
host: localhost:8088
consumes:
- application/json
- application/xml
- application/gob
produces:
- application/json
- application/xml
- application/gob
paths:
  /book/{id}:
    get:
      tags:
      - crud
      summary: getBook crud
      description: Read Book
      operationId: crud#getBook
      parameters:
      - name: id
        in: path
        description: Unique Id Book
        required: true
        type: string
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/CrudGetBookResponseBody'
        "400":
          description: Book with his id doesn't exist
          schema:
            $ref: '#/definitions/CrudGetBookIDDoesntExistResponseBody'
            required:
            - message
            - id
      schemes:
      - http
  /book/add:
    post:
      tags:
      - crud
      summary: createBook crud
      description: Create Book
      operationId: crud#createBook
      parameters:
      - name: CreateBookRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/CrudCreateBookRequestBody'
      responses:
        "201":
          description: Created response.
          schema:
            $ref: '#/definitions/CrudCreateBookResponseBody'
      schemes:
      - http
  /book/remove/{id}:
    delete:
      tags:
      - crud
      summary: deleteBook crud
      description: Delete Book
      operationId: crud#deleteBook
      parameters:
      - name: id
        in: path
        description: UUID of an existing book
        required: true
        type: string
      responses:
        "200":
          description: OK response.
      schemes:
      - http
  /books:
    get:
      tags:
      - crud
      summary: getAllBooks crud
      description: Read All Books
      operationId: crud#getAllBooks
      responses:
        "200":
          description: OK response.
          schema:
            type: array
            items:
              $ref: '#/definitions/BookResponseResponse'
      schemes:
      - http
  /openapi.json:
    get:
      tags:
      - openapi
      summary: Download openapi3.json
      operationId: openapi#/openapi.json
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
      schemes:
      - http
definitions:
  BookResponseResponse:
    title: BookResponseResponse
    type: object
    properties:
      id:
        type: string
        example: Voluptatem adipisci culpa tenetur dignissimos.
      name:
        type: string
        example: Enim vel distinctio fuga eum quia dicta.
      price:
        type: number
        example: 0.849101845836661
        format: double
    example:
      id: Culpa doloribus animi nihil.
      name: Qui maxime eveniet aperiam.
      price: 0.4988779756615848
  CrudCreateBookRequestBody:
    title: CrudCreateBookRequestBody
    type: object
    properties:
      name:
        type: string
        example: Expedita quidem aut officia accusantium illum architecto.
      price:
        type: number
        example: 0.27500716997695507
        format: double
    example:
      name: Nihil praesentium quia voluptatum voluptatem.
      price: 0.15050183280436646
  CrudCreateBookResponseBody:
    title: CrudCreateBookResponseBody
    type: object
    properties:
      id:
        type: string
        example: Animi delectus asperiores.
      name:
        type: string
        example: Voluptas neque possimus.
      price:
        type: number
        example: 0.8088872224995624
        format: double
    example:
      id: Aperiam non esse vero autem a.
      name: Aut voluptatibus nisi voluptas corporis.
      price: 0.46879939224641815
  CrudGetBookCannotConvertStringToUUIDResponseBody:
    title: CrudGetBookCannotConvertStringToUUIDResponseBody
    type: object
    properties:
      id:
        type: string
        description: Wrong Id
        example: Perferendis vel et.
      message:
        type: string
        description: Returning error
        example: Repellendus quaerat nemo neque voluptatibus quibusdam.
    description: cannot convert string to uuid
    example:
      id: Et dolore assumenda nihil impedit hic aut.
      message: Sint praesentium consequatur voluptas quasi.
    required:
    - message
    - id
  CrudGetBookIDDoesntExistResponseBody:
    title: CrudGetBookIDDoesntExistResponseBody
    type: object
    properties:
      id:
        type: string
        description: Wrong Id
        example: Iure ut dolor ex.
      message:
        type: string
        description: Returning error
        example: Minima nam quis.
    description: Book with his id doesn't exist
    example:
      id: Blanditiis quo earum illo omnis.
      message: Esse modi illum.
    required:
    - message
    - id
  CrudGetBookResponseBody:
    title: CrudGetBookResponseBody
    type: object
    properties:
      id:
        type: string
        example: Autem id voluptatum qui eveniet.
      name:
        type: string
        example: Ut qui commodi quibusdam et.
      price:
        type: number
        example: 0.9010695150933624
        format: double
    example:
      id: Accusantium ut.
      name: Delectus et est atque ipsam.
      price: 0.18062393525003903
