swagger: "2.0"
info:
    title: starterpack
    description: Best API REST building with GoaDesign
    contact:
        name: Guillaume MORIN
        email: guillaume.morin@epitech.eu
        url: https://guillaume-morin.fr/
    license:
        name: GOA X GM
        url: https://guillaume-morin.fr/
    version: "1.0"
host: localhost:8088
consumes:
    - application/json
    - application/xml
    - application/gob
produces:
    - application/json
    - application/xml
    - application/gob
paths:
    /authorization:
        post:
            tags:
                - oAuth
            summary: oAuth oAuth
            description: oAuth
            operationId: oAuth#oAuth
            parameters:
                - name: OAuthRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/OAuthOAuthRequestBody'
                    required:
                        - client_id
                        - client_secret
                        - grant_type
            responses:
                "201":
                    description: Created response.
                    schema:
                        $ref: '#/definitions/OAuthOAuthCreatedResponseBody'
                        required:
                            - access_token
                            - token_type
                            - expires_in
                            - success
                "400":
                    description: Bad Request response.
                    schema:
                        $ref: '#/definitions/OAuthOAuthBadRequestResponseBody'
                        required:
                            - access_token
                            - token_type
                            - expires_in
                            - success
                "401":
                    description: Unauthorized response.
                    schema:
                        type: string
                "403":
                    description: Forbidden response.
                    schema:
                        type: string
                "500":
                    description: Internal Server Error response.
                    schema:
                        $ref: '#/definitions/OAuthOAuthUnknownErrorResponseBody'
                        required:
                            - err
                            - success
                            - error_code
            schemes:
                - http
    /openapi.json:
        get:
            tags:
                - openapi
            summary: Download openapi3.json
            description: Postman generated by Goa
            externalDocs:
                description: cd Public && live-server to see the Documentation of the API
                url: http://127.0.0.1:8080/
            operationId: openapi#/openapi.json
            responses:
                "200":
                    description: File downloaded
                    schema:
                        type: file
            schemes:
                - http
    /public/{path}:
        get:
            tags:
                - fileapi
            summary: Download bin/public
            description: Serve static content.
            operationId: fileapi#/public/{*path}
            parameters:
                - name: path
                  in: path
                  description: Relative file path
                  required: true
                  type: string
            responses:
                "200":
                    description: File downloaded
                    schema:
                        type: file
                "404":
                    description: File not found
                    schema:
                        $ref: '#/definitions/Error'
            schemes:
                - http
    /refresh:
        post:
            tags:
                - jwtToken
            summary: refresh jwtToken
            description: Refresh Token
            operationId: jwtToken#refresh
            parameters:
                - name: Authorization
                  in: header
                  description: OAuth token
                  required: false
                  type: string
                  pattern: ^Bearer [^ ]+$
                - name: RefreshRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/JWTTokenRefreshRequestBody'
                    required:
                        - refresh_token
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/JWTTokenRefreshResponseBody'
                        required:
                            - access_token
                            - refresh_token
                            - success
                "500":
                    description: Internal Server Error response.
                    schema:
                        $ref: '#/definitions/JWTTokenRefreshUnknownErrorResponseBody'
                        required:
                            - err
                            - success
                            - error_code
            schemes:
                - http
            security:
                - OAuth2_header_Authorization: []
    /signin:
        post:
            tags:
                - jwtToken
            summary: signin jwtToken
            description: signin
            operationId: jwtToken#signin
            parameters:
                - name: Authorization
                  in: header
                  description: OAuth token
                  required: false
                  type: string
                  pattern: ^Bearer [^ ]+$
                - name: SigninRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/JWTTokenSigninRequestBody'
                    required:
                        - password
                        - email
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/JWTTokenSigninResponseBody'
                        required:
                            - access_token
                            - refresh_token
                            - success
                "500":
                    description: Internal Server Error response.
                    schema:
                        $ref: '#/definitions/JWTTokenSigninUnknownErrorResponseBody'
                        required:
                            - err
                            - success
                            - error_code
            schemes:
                - http
            security:
                - OAuth2_header_Authorization: []
    /signup:
        post:
            tags:
                - jwtToken
            summary: signup jwtToken
            description: signup to generate jwt token
            operationId: jwtToken#signup
            parameters:
                - name: Authorization
                  in: header
                  description: OAuth token
                  required: false
                  type: string
                  pattern: ^Bearer [^ ]+$
                - name: SignupRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/JWTTokenSignupRequestBody'
                    required:
                        - email
                        - password
                        - confirm_password
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/JWTTokenSignupResponseBody'
                        required:
                            - access_token
                            - refresh_token
                            - success
                "500":
                    description: Internal Server Error response.
                    schema:
                        $ref: '#/definitions/JWTTokenSignupUnknownErrorResponseBody'
                        required:
                            - err
                            - success
                            - error_code
            schemes:
                - http
            security:
                - OAuth2_header_Authorization: []
    /v1/email-exist:
        post:
            tags:
                - auth
            summary: email-exist auth
            description: Check if email exist in database
            operationId: auth#email-exist
            parameters:
                - name: Authorization
                  in: header
                  description: OAuth token
                  required: false
                  type: string
                  pattern: ^Bearer [^ ]+$
                - name: Email-ExistRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/AuthEmailExistRequestBody'
                    required:
                        - email
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/AuthEmailExistResponseBody'
                        required:
                            - exist
                            - success
                "500":
                    description: Internal Server Error response.
                    schema:
                        $ref: '#/definitions/AuthEmailExistUnknownErrorResponseBody'
                        required:
                            - err
                            - success
                            - error_code
            schemes:
                - http
            security:
                - OAuth2_header_Authorization: []
    /v1/file/add:
        post:
            tags:
                - files
            summary: importFile files
            description: Import file
            operationId: files#importFile
            consumes:
                - multipart/form-data
            parameters:
                - name: Authorization
                  in: header
                  description: OAuth token
                  required: false
                  type: string
                  pattern: ^Bearer [^ ]+$
                - name: jwtToken
                  in: header
                  description: Jwt token
                  required: false
                  type: string
                  pattern: ^Bearer [^ ]+$
                - name: ImportFileRequestBody
                  in: formData
                  required: true
                  schema:
                    $ref: '#/definitions/FilesImportFileRequestBody'
                    required:
                        - filename
                        - content
                        - format
            responses:
                "201":
                    description: Created response.
                    schema:
                        $ref: '#/definitions/FilesImportFileResponseBody'
                        required:
                            - success
                            - file
                "500":
                    description: Internal Server Error response.
                    schema:
                        $ref: '#/definitions/FilesImportFileUnknownErrorResponseBody'
                        required:
                            - err
                            - success
                            - error_code
            schemes:
                - http
            security:
                - OAuth2_header_Authorization: []
                  jwt_header_jwtToken: []
    /v1/file/remove:
        patch:
            tags:
                - files
            summary: deleteFile files
            description: Delete one file by ID
            operationId: files#deleteFile
            parameters:
                - name: Authorization
                  in: header
                  description: OAuth token
                  required: false
                  type: string
                  pattern: ^Bearer [^ ]+$
                - name: jwtToken
                  in: header
                  description: Jwt token
                  required: false
                  type: string
                  pattern: ^Bearer [^ ]+$
                - name: DeleteFileRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/FilesDeleteFileRequestBody'
                    required:
                        - url
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/FilesDeleteFileResponseBody'
                        required:
                            - success
                "500":
                    description: Internal Server Error response.
                    schema:
                        $ref: '#/definitions/FilesDeleteFileUnknownErrorResponseBody'
                        required:
                            - err
                            - success
                            - error_code
            schemes:
                - http
            security:
                - OAuth2_header_Authorization: []
                  jwt_header_jwtToken: []
    /v1/lost:
        post:
            tags:
                - auth
            summary: send-confirmation auth
            description: Check if email exist in database and send code by email to reset password
            operationId: auth#send-confirmation
            parameters:
                - name: Authorization
                  in: header
                  description: OAuth token
                  required: false
                  type: string
                  pattern: ^Bearer [^ ]+$
                - name: Send-ConfirmationRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/AuthSendConfirmationRequestBody'
                    required:
                        - email
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/AuthSendConfirmationResponseBody'
                        required:
                            - exist
                            - success
                "500":
                    description: Internal Server Error response.
                    schema:
                        $ref: '#/definitions/AuthSendConfirmationUnknownErrorResponseBody'
                        required:
                            - err
                            - success
                            - error_code
            schemes:
                - http
            security:
                - OAuth2_header_Authorization: []
    /v1/reset-password:
        put:
            tags:
                - auth
            summary: reset-password auth
            description: Reset forget password of the user with the correct confirm code
            operationId: auth#reset-password
            parameters:
                - name: Authorization
                  in: header
                  description: OAuth token
                  required: false
                  type: string
                  pattern: ^Bearer [^ ]+$
                - name: Reset-PasswordRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/AuthResetPasswordRequestBody'
                    required:
                        - email
                        - code
                        - password
                        - confirm_password
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/AuthResetPasswordResponseBody'
                        required:
                            - success
                "500":
                    description: Internal Server Error response.
                    schema:
                        $ref: '#/definitions/AuthResetPasswordUnknownErrorResponseBody'
                        required:
                            - err
                            - success
                            - error_code
            schemes:
                - http
            security:
                - OAuth2_header_Authorization: []
    /v1/web/user/{id}:
        get:
            tags:
                - users
            summary: getUserByID users
            description: Get one User
            operationId: users#getUserByID
            parameters:
                - name: id
                  in: path
                  description: Unique ID of the User
                  required: true
                  type: string
                  format: uuid
                - name: Authorization
                  in: header
                  description: OAuth token
                  required: false
                  type: string
                  pattern: ^Bearer [^ ]+$
                - name: jwtToken
                  in: header
                  description: Jwt token
                  required: false
                  type: string
                  pattern: ^Bearer [^ ]+$
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/UsersGetUserByIDResponseBody'
                        required:
                            - user
                            - success
                "500":
                    description: Internal Server Error response.
                    schema:
                        $ref: '#/definitions/UsersGetUserByIDUnknownErrorResponseBody'
                        required:
                            - err
                            - success
                            - error_code
            schemes:
                - http
            security:
                - OAuth2_header_Authorization: []
                  jwt_header_jwtToken: []
    /v1/web/user/edit/avatar:
        put:
            tags:
                - users
            summary: updateAvatar users
            description: Update avatar
            operationId: users#updateAvatar
            parameters:
                - name: Authorization
                  in: header
                  description: OAuth token
                  required: false
                  type: string
                  pattern: ^Bearer [^ ]+$
                - name: jwtToken
                  in: header
                  description: Jwt token
                  required: false
                  type: string
                  pattern: ^Bearer [^ ]+$
                - name: UpdateAvatarRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/UsersUpdateAvatarRequestBody'
                    required:
                        - id
                        - avatar
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/UsersUpdateAvatarResponseBody'
                        required:
                            - success
                "500":
                    description: Internal Server Error response.
                    schema:
                        $ref: '#/definitions/UsersUpdateAvatarUnknownErrorResponseBody'
                        required:
                            - err
                            - success
                            - error_code
            schemes:
                - http
            security:
                - OAuth2_header_Authorization: []
                  jwt_header_jwtToken: []
    /v1/web/user/edit/description:
        put:
            tags:
                - users
            summary: updateDescription users
            description: Update main info like email, firstname, lastname
            operationId: users#updateDescription
            parameters:
                - name: Authorization
                  in: header
                  description: OAuth token
                  required: false
                  type: string
                  pattern: ^Bearer [^ ]+$
                - name: jwtToken
                  in: header
                  description: Jwt token
                  required: false
                  type: string
                  pattern: ^Bearer [^ ]+$
                - name: UpdateDescriptionRequestBody
                  in: body
                  required: true
                  schema:
                    $ref: '#/definitions/UsersUpdateDescriptionRequestBody'
                    required:
                        - email
                        - id
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/UsersUpdateDescriptionResponseBody'
                        required:
                            - success
                "500":
                    description: Internal Server Error response.
                    schema:
                        $ref: '#/definitions/UsersUpdateDescriptionUnknownErrorResponseBody'
                        required:
                            - err
                            - success
                            - error_code
            schemes:
                - http
            security:
                - OAuth2_header_Authorization: []
                  jwt_header_jwtToken: []
    /v1/web/user/remove/{id}:
        delete:
            tags:
                - users
            summary: deleteUser users
            description: Delete one User by ID
            operationId: users#deleteUser
            parameters:
                - name: id
                  in: path
                  required: true
                  type: string
                  format: uuid
                - name: Authorization
                  in: header
                  description: OAuth token
                  required: false
                  type: string
                  pattern: ^Bearer [^ ]+$
                - name: jwtToken
                  in: header
                  description: Jwt token
                  required: false
                  type: string
                  pattern: ^Bearer [^ ]+$
            responses:
                "200":
                    description: OK response.
                    schema:
                        $ref: '#/definitions/UsersDeleteUserResponseBody'
                        required:
                            - success
                "500":
                    description: Internal Server Error response.
                    schema:
                        $ref: '#/definitions/UsersDeleteUserUnknownErrorResponseBody'
                        required:
                            - err
                            - success
                            - error_code
            schemes:
                - http
            security:
                - OAuth2_header_Authorization: []
                  jwt_header_jwtToken: []
definitions:
    AuthEmailExistRequestBody:
        title: AuthEmailExistRequestBody
        type: object
        properties:
            email:
                type: string
                example: guillaume@gmail.com
                format: email
        example:
            email: guillaume@gmail.com
        required:
            - email
    AuthEmailExistResponseBody:
        title: AuthEmailExistResponseBody
        type: object
        properties:
            exist:
                type: boolean
                example: true
            success:
                type: boolean
                example: true
        example:
            exist: true
            success: true
        required:
            - exist
            - success
    AuthEmailExistUnknownErrorResponseBody:
        title: AuthEmailExistUnknownErrorResponseBody
        type: object
        properties:
            err:
                type: string
                example: sql no rows affected
            error_code:
                type: string
                example: TX_UPDATE_ITEM
            success:
                type: boolean
                default: false
                example: false
        description: Error not identified (500)
        example:
            err: sql no rows affected
            error_code: TX_UPDATE_ITEM
            success: false
        required:
            - err
            - success
            - error_code
    AuthResetPasswordRequestBody:
        title: AuthResetPasswordRequestBody
        type: object
        properties:
            code:
                type: string
                example: ZGI5E
                pattern: ^[A-Za-z0-9]+$
                minLength: 5
                maxLength: 5
            confirm_password:
                type: string
                description: Minimum 9 charactères / Chiffre Obligatoire
                example: JeSuisUnTest974
                pattern: \d
                minLength: 9
            email:
                type: string
                example: guillaume@gmail.com
                format: email
            password:
                type: string
                description: Minimum 9 charactères / Chiffre Obligatoire
                example: JeSuisUnTest974
                pattern: \d
                minLength: 9
        example:
            code: ZGI5E
            confirm_password: JeSuisUnTest974
            email: guillaume@gmail.com
            password: JeSuisUnTest974
        required:
            - email
            - code
            - password
            - confirm_password
    AuthResetPasswordResponseBody:
        title: AuthResetPasswordResponseBody
        type: object
        properties:
            success:
                type: boolean
                example: false
        example:
            success: true
        required:
            - success
    AuthResetPasswordUnknownErrorResponseBody:
        title: AuthResetPasswordUnknownErrorResponseBody
        type: object
        properties:
            err:
                type: string
                example: sql no rows affected
            error_code:
                type: string
                example: TX_UPDATE_ITEM
            success:
                type: boolean
                default: false
                example: false
        description: Error not identified (500)
        example:
            err: sql no rows affected
            error_code: TX_UPDATE_ITEM
            success: false
        required:
            - err
            - success
            - error_code
    AuthSendConfirmationRequestBody:
        title: AuthSendConfirmationRequestBody
        type: object
        properties:
            email:
                type: string
                example: guillaume@gmail.com
                format: email
        example:
            email: guillaume@gmail.com
        required:
            - email
    AuthSendConfirmationResponseBody:
        title: AuthSendConfirmationResponseBody
        type: object
        properties:
            exist:
                type: boolean
                example: false
            success:
                type: boolean
                example: true
        example:
            exist: false
            success: false
        required:
            - exist
            - success
    AuthSendConfirmationUnknownErrorResponseBody:
        title: AuthSendConfirmationUnknownErrorResponseBody
        type: object
        properties:
            err:
                type: string
                example: sql no rows affected
            error_code:
                type: string
                example: TX_UPDATE_ITEM
            success:
                type: boolean
                default: false
                example: true
        description: Error not identified (500)
        example:
            err: sql no rows affected
            error_code: TX_UPDATE_ITEM
            success: true
        required:
            - err
            - success
            - error_code
    Error:
        title: 'Mediatype identifier: application/vnd.goa.error; view=default'
        type: object
        properties:
            fault:
                type: boolean
                description: Is the error a server-side fault?
                example: true
            id:
                type: string
                description: ID is a unique identifier for this particular occurrence of the problem.
                example: 123abc
            message:
                type: string
                description: Message is a human-readable explanation specific to this occurrence of the problem.
                example: parameter 'p' must be an integer
            name:
                type: string
                description: Name is the name of this class of errors.
                example: bad_request
            temporary:
                type: boolean
                description: Is the error temporary?
                example: true
            timeout:
                type: boolean
                description: Is the error a timeout?
                example: false
        description: Error response result type (default view)
        example:
            fault: false
            id: 123abc
            message: parameter 'p' must be an integer
            name: bad_request
            temporary: true
            timeout: true
        required:
            - name
            - id
            - message
            - temporary
            - timeout
            - fault
    FilesDeleteFileRequestBody:
        title: FilesDeleteFileRequestBody
        type: object
        properties:
            url:
                type: string
                example: /public/uploads/2021/12/2ca51d10-b660-4b2c-b27f-f7a119642885.png
                minLength: 23
        example:
            url: /public/uploads/2021/12/2ca51d10-b660-4b2c-b27f-f7a119642885.png
        required:
            - url
    FilesDeleteFileResponseBody:
        title: FilesDeleteFileResponseBody
        type: object
        properties:
            success:
                type: boolean
                example: false
        example:
            success: false
        required:
            - success
    FilesDeleteFileUnknownErrorResponseBody:
        title: FilesDeleteFileUnknownErrorResponseBody
        type: object
        properties:
            err:
                type: string
                example: sql no rows affected
            error_code:
                type: string
                example: TX_UPDATE_ITEM
            success:
                type: boolean
                default: false
                example: false
        description: Error not identified (500)
        example:
            err: sql no rows affected
            error_code: TX_UPDATE_ITEM
            success: false
        required:
            - err
            - success
            - error_code
    FilesImportFileRequestBody:
        title: FilesImportFileRequestBody
        type: object
        properties:
            content:
                type: string
                description: content of image
                example:
                    - 85
                    - 110
                    - 100
                    - 101
                    - 32
                    - 110
                    - 101
                    - 115
                    - 99
                    - 105
                    - 117
                    - 110
                    - 116
                    - 32
                    - 99
                    - 117
                    - 109
                    - 113
                    - 117
                    - 101
                    - 46
                format: byte
            filename:
                type: string
                description: uploaded file name
                example: foo.jpg
                minLength: 2
            format:
                type: string
                description: uploaded file format
                example: image/jpeg
                enum:
                    - image/jpeg
                    - image/png
                    - image/jpg
            h:
                type: integer
                description: height of image if you crop
                example: 8529679476592417868
                format: int64
            mime:
                type: string
                description: url file
                example: Illo repudiandae in eum ratione sed.
            size:
                type: integer
                description: size of image
                example: 5795732347313123467
                format: int64
            url:
                type: string
                description: url file
                example: Molestias ad quasi sed laborum.
            w:
                type: integer
                description: width of image if you crop
                example: 2908476327083422861
                format: int64
        example:
            content:
                - 81
                - 117
                - 105
                - 32
                - 100
                - 117
                - 99
                - 105
                - 109
                - 117
                - 115
                - 46
            filename: foo.jpg
            format: image/jpeg
            h: 5194974390363827584
            mime: Quia quam et incidunt vero.
            size: 1352988947556285481
            url: Vero deleniti sint temporibus deserunt.
            w: 5381470590522431180
        required:
            - filename
            - content
            - format
    FilesImportFileResponseBody:
        title: FilesImportFileResponseBody
        type: object
        properties:
            file:
                $ref: '#/definitions/resFileResponseBody'
            success:
                type: boolean
                example: true
        example:
            file:
                id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
                mime: Animi quia eos est ipsam magnam.
                name: foo.png
                size: 6063255645832637196
                url: Eum non delectus qui explicabo.
            success: true
        required:
            - success
            - file
    FilesImportFileUnknownErrorResponseBody:
        title: FilesImportFileUnknownErrorResponseBody
        type: object
        properties:
            err:
                type: string
                example: sql no rows affected
            error_code:
                type: string
                example: TX_UPDATE_ITEM
            success:
                type: boolean
                default: false
                example: true
        description: Error not identified (500)
        example:
            err: sql no rows affected
            error_code: TX_UPDATE_ITEM
            success: true
        required:
            - err
            - success
            - error_code
    JWTTokenRefreshRequestBody:
        title: JWTTokenRefreshRequestBody
        type: object
        properties:
            refresh_token:
                type: string
                example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
                minLength: 32
        example:
            refresh_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
        required:
            - refresh_token
    JWTTokenRefreshResponseBody:
        title: JWTTokenRefreshResponseBody
        type: object
        properties:
            access_token:
                type: string
                example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
            refresh_token:
                type: string
                example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
            success:
                type: boolean
                example: true
        example:
            access_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
            refresh_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
            success: false
        required:
            - access_token
            - refresh_token
            - success
    JWTTokenRefreshUnknownErrorResponseBody:
        title: JWTTokenRefreshUnknownErrorResponseBody
        type: object
        properties:
            err:
                type: string
                example: sql no rows affected
            error_code:
                type: string
                example: TX_UPDATE_ITEM
            success:
                type: boolean
                default: false
                example: false
        description: Error not identified (500)
        example:
            err: sql no rows affected
            error_code: TX_UPDATE_ITEM
            success: true
        required:
            - err
            - success
            - error_code
    JWTTokenSigninRequestBody:
        title: JWTTokenSigninRequestBody
        type: object
        properties:
            email:
                type: string
                example: guillaume@epitech.eu
                format: email
            password:
                type: string
                description: Minimum 9 charactères / Chiffre Obligatoire
                example: JeSuisUnTest974
                pattern: \d
                minLength: 9
        example:
            email: guillaume@epitech.eu
            password: JeSuisUnTest974
        required:
            - password
            - email
    JWTTokenSigninResponseBody:
        title: JWTTokenSigninResponseBody
        type: object
        properties:
            access_token:
                type: string
                example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
            refresh_token:
                type: string
                example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
            success:
                type: boolean
                example: false
        example:
            access_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
            refresh_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
            success: false
        required:
            - access_token
            - refresh_token
            - success
    JWTTokenSigninUnknownErrorResponseBody:
        title: JWTTokenSigninUnknownErrorResponseBody
        type: object
        properties:
            err:
                type: string
                example: sql no rows affected
            error_code:
                type: string
                example: TX_UPDATE_ITEM
            success:
                type: boolean
                default: false
                example: false
        description: Error not identified (500)
        example:
            err: sql no rows affected
            error_code: TX_UPDATE_ITEM
            success: false
        required:
            - err
            - success
            - error_code
    JWTTokenSignupRequestBody:
        title: JWTTokenSignupRequestBody
        type: object
        properties:
            confirm_password:
                type: string
                description: Minimum 9 charactères / Chiffre Obligatoire
                example: JeSuisUnTest974
                pattern: \d
                minLength: 9
            email:
                type: string
                example: guillaume@epitech.eu
                format: email
            password:
                type: string
                description: Minimum 9 charactères / Chiffre Obligatoire
                example: JeSuisUnTest974
                pattern: \d
                minLength: 9
        example:
            confirm_password: JeSuisUnTest974
            email: guillaume@epitech.eu
            password: JeSuisUnTest974
        required:
            - email
            - password
            - confirm_password
    JWTTokenSignupResponseBody:
        title: JWTTokenSignupResponseBody
        type: object
        properties:
            access_token:
                type: string
                example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
            refresh_token:
                type: string
                example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
            success:
                type: boolean
                example: true
        example:
            access_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
            refresh_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
            success: true
        required:
            - access_token
            - refresh_token
            - success
    JWTTokenSignupUnknownErrorResponseBody:
        title: JWTTokenSignupUnknownErrorResponseBody
        type: object
        properties:
            err:
                type: string
                example: sql no rows affected
            error_code:
                type: string
                example: TX_UPDATE_ITEM
            success:
                type: boolean
                default: false
                example: true
        description: Error not identified (500)
        example:
            err: sql no rows affected
            error_code: TX_UPDATE_ITEM
            success: false
        required:
            - err
            - success
            - error_code
    OAuthOAuthBadRequestResponseBody:
        title: OAuthOAuthBadRequestResponseBody
        type: object
        properties:
            access_token:
                type: string
                example: Nam et voluptatem illum tenetur minima aut.
            expires_in:
                type: integer
                example: 8161455401701233110
                format: int64
            success:
                type: boolean
                example: false
            token_type:
                type: string
                example: Vel voluptatem ut nihil.
        example:
            access_token: Quod mollitia velit.
            expires_in: 1779374780890354756
            success: true
            token_type: In saepe voluptates.
        required:
            - access_token
            - token_type
            - expires_in
            - success
    OAuthOAuthCreatedResponseBody:
        title: OAuthOAuthCreatedResponseBody
        type: object
        properties:
            access_token:
                type: string
                example: Accusantium est ut esse.
            expires_in:
                type: integer
                example: 4545527829279733676
                format: int64
            success:
                type: boolean
                example: true
            token_type:
                type: string
                example: Itaque consequatur et et libero.
        example:
            access_token: Laborum minima velit et fugit.
            expires_in: 5912957045613906880
            success: true
            token_type: Dolore quibusdam sunt doloribus dignissimos ullam.
        required:
            - access_token
            - token_type
            - expires_in
            - success
    OAuthOAuthRequestBody:
        title: OAuthOAuthRequestBody
        type: object
        properties:
            client_id:
                type: string
                example: Consequatur ut dicta dolorum.
            client_secret:
                type: string
                example: Ipsum assumenda aut et quos atque nam.
            grant_type:
                type: string
                example: Esse dolore dolore.
        example:
            client_id: Aut at veniam quia numquam.
            client_secret: Consequatur est et.
            grant_type: Nam aut asperiores voluptatem esse.
        required:
            - client_id
            - client_secret
            - grant_type
    OAuthOAuthUnknownErrorResponseBody:
        title: OAuthOAuthUnknownErrorResponseBody
        type: object
        properties:
            err:
                type: string
                example: sql no rows affected
            error_code:
                type: string
                example: TX_UPDATE_ITEM
            success:
                type: boolean
                default: false
                example: true
        description: Error not identified (500)
        example:
            err: sql no rows affected
            error_code: TX_UPDATE_ITEM
            success: false
        required:
            - err
            - success
            - error_code
    UsersDeleteUserResponseBody:
        title: UsersDeleteUserResponseBody
        type: object
        properties:
            success:
                type: boolean
                example: false
        example:
            success: false
        required:
            - success
    UsersDeleteUserUnknownErrorResponseBody:
        title: UsersDeleteUserUnknownErrorResponseBody
        type: object
        properties:
            err:
                type: string
                example: sql no rows affected
            error_code:
                type: string
                example: TX_UPDATE_ITEM
            success:
                type: boolean
                default: false
                example: true
        description: Error not identified (500)
        example:
            err: sql no rows affected
            error_code: TX_UPDATE_ITEM
            success: false
        required:
            - err
            - success
            - error_code
    UsersGetUserByIDResponseBody:
        title: UsersGetUserByIDResponseBody
        type: object
        properties:
            success:
                type: boolean
                example: true
            user:
                $ref: '#/definitions/resUserResponseBody'
        example:
            success: true
            user:
                avatar: /public/uploads/2022/02/eedf427a-559a-4faf-9e75-357fbb5d65fb.png
                email: guillaume@gmail.com
                firstname: Guillaume
                id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
                lastname: Morin
                role: Sed sunt.
        required:
            - user
            - success
    UsersGetUserByIDUnknownErrorResponseBody:
        title: UsersGetUserByIDUnknownErrorResponseBody
        type: object
        properties:
            err:
                type: string
                example: sql no rows affected
            error_code:
                type: string
                example: TX_UPDATE_ITEM
            success:
                type: boolean
                default: false
                example: false
        description: Error not identified (500)
        example:
            err: sql no rows affected
            error_code: TX_UPDATE_ITEM
            success: true
        required:
            - err
            - success
            - error_code
    UsersUpdateAvatarRequestBody:
        title: UsersUpdateAvatarRequestBody
        type: object
        properties:
            avatar:
                type: string
                description: Url of the avatar and stock in db
                example: Rem sunt distinctio sint aut.
            id:
                type: string
                example: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
                format: uuid
        example:
            avatar: Exercitationem temporibus quas.
            id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
        required:
            - id
            - avatar
    UsersUpdateAvatarResponseBody:
        title: UsersUpdateAvatarResponseBody
        type: object
        properties:
            success:
                type: boolean
                example: true
            user:
                $ref: '#/definitions/resUserResponseBody'
        example:
            success: true
            user:
                avatar: /public/uploads/2022/02/eedf427a-559a-4faf-9e75-357fbb5d65fb.png
                email: guillaume@gmail.com
                firstname: Guillaume
                id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
                lastname: Morin
                role: Sed sunt.
        required:
            - success
    UsersUpdateAvatarUnknownErrorResponseBody:
        title: UsersUpdateAvatarUnknownErrorResponseBody
        type: object
        properties:
            err:
                type: string
                example: sql no rows affected
            error_code:
                type: string
                example: TX_UPDATE_ITEM
            success:
                type: boolean
                default: false
                example: true
        description: Error not identified (500)
        example:
            err: sql no rows affected
            error_code: TX_UPDATE_ITEM
            success: false
        required:
            - err
            - success
            - error_code
    UsersUpdateDescriptionRequestBody:
        title: UsersUpdateDescriptionRequestBody
        type: object
        properties:
            email:
                type: string
                example: guillaume@gmail.com
                format: email
            firstname:
                type: string
                example: Guillaume
                minLength: 2
                maxLength: 20
            id:
                type: string
                example: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
                format: uuid
            lastname:
                type: string
                example: Morin
                minLength: 2
                maxLength: 20
        example:
            email: guillaume@gmail.com
            firstname: Guillaume
            id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
            lastname: Morin
        required:
            - email
            - id
    UsersUpdateDescriptionResponseBody:
        title: UsersUpdateDescriptionResponseBody
        type: object
        properties:
            success:
                type: boolean
                example: true
            user:
                $ref: '#/definitions/resUserResponseBody'
        example:
            success: true
            user:
                avatar: /public/uploads/2022/02/eedf427a-559a-4faf-9e75-357fbb5d65fb.png
                email: guillaume@gmail.com
                firstname: Guillaume
                id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
                lastname: Morin
                role: Sed sunt.
        required:
            - success
    UsersUpdateDescriptionUnknownErrorResponseBody:
        title: UsersUpdateDescriptionUnknownErrorResponseBody
        type: object
        properties:
            err:
                type: string
                example: sql no rows affected
            error_code:
                type: string
                example: TX_UPDATE_ITEM
            success:
                type: boolean
                default: false
                example: true
        description: Error not identified (500)
        example:
            err: sql no rows affected
            error_code: TX_UPDATE_ITEM
            success: true
        required:
            - err
            - success
            - error_code
    resFileResponseBody:
        title: resFileResponseBody
        type: object
        properties:
            id:
                type: string
                example: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
                format: uuid
            mime:
                type: string
                example: Tempore aut.
            name:
                type: string
                example: foo.png
            size:
                type: integer
                example: 5628325901883333098
                format: int64
            url:
                type: string
                example: Quo voluptas laboriosam laborum repellat consectetur magnam.
        example:
            id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
            mime: Est aut odit aliquid.
            name: foo.png
            size: 1532588874162345822
            url: Et animi et.
        required:
            - id
            - name
            - url
    resUserResponseBody:
        title: resUserResponseBody
        type: object
        properties:
            avatar:
                type: string
                example: /public/uploads/2022/02/eedf427a-559a-4faf-9e75-357fbb5d65fb.png
            email:
                type: string
                example: guillaume@gmail.com
            firstname:
                type: string
                example: Guillaume
            id:
                type: string
                example: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
            lastname:
                type: string
                example: Morin
            role:
                type: string
                description: User is admin or not
                example: Accusamus iusto fugit.
        example:
            avatar: /public/uploads/2022/02/eedf427a-559a-4faf-9e75-357fbb5d65fb.png
            email: guillaume@gmail.com
            firstname: Guillaume
            id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
            lastname: Morin
            role: Quas rerum amet.
        required:
            - id
            - email
            - firstname
            - lastname
            - avatar
securityDefinitions:
    OAuth2_header_Authorization:
        type: oauth2
        description: Use OAuth2 to authenticate
        flow: application
        tokenUrl: /authorization
        scopes:
            api:read: Provides read access
    jwt_header_jwtToken:
        type: apiKey
        description: |-
            Secures endpoint by requiring a valid JWT token retrieved via the signin endpoint. Supports scopes "api:read" and "api:write".

            **Security Scopes**:
              * `api:read`: Read-only access
              * `api:write`: Read and write access
        name: jwtToken
        in: header
