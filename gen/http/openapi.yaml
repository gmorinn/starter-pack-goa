swagger: "2.0"
info:
  title: Starter Pack
  description: Best API REST building with GoaDesign
  contact:
    name: Guillaume MORIN
    email: guillaume.morin@epitech.eu
    url: https://guillaume-morin.fr/
  license:
    name: GOA X GM
    url: https://guillaume-morin.fr/
  version: "1.0"
host: localhost:8088
consumes:
- application/json
- application/xml
- application/gob
produces:
- application/json
- application/xml
- application/gob
paths:
  /authorization:
    post:
      tags:
      - oAuth
      summary: oAuth oAuth
      description: oAuth
      operationId: oAuth#oAuth
      parameters:
      - name: OAuthRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/OAuthOAuthRequestBody'
          required:
          - client_id
          - client_secret
          - grant_type
      responses:
        "201":
          description: Created response.
          schema:
            $ref: '#/definitions/OAuthOAuthCreatedResponseBody'
            required:
            - access_token
            - token_type
            - expires_in
            - success
        "400":
          description: Bad Request response.
          schema:
            $ref: '#/definitions/OAuthOAuthBadRequestResponseBody'
            required:
            - access_token
            - token_type
            - expires_in
            - success
        "401":
          description: Unauthorized response.
          schema:
            $ref: '#/definitions/OAuthOAuthUnauthorizedResponseBody'
        "403":
          description: Forbidden response.
          schema:
            $ref: '#/definitions/OAuthOAuthInvalidScopesResponseBody'
        "500":
          description: Internal Server Error response.
          schema:
            $ref: '#/definitions/OAuthOAuthUnknownErrorResponseBody'
            required:
            - err
            - success
            - error_code
      schemes:
      - http
  /openapi.json:
    get:
      tags:
      - openapi
      summary: Download openapi3.json
      description: Postman generated by Goa
      externalDocs:
        description: cd Public && live-server to see the Documentation of the API
        url: http://127.0.0.1:8080/
      operationId: openapi#/openapi.json
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
      schemes:
      - http
  /resfresh:
    post:
      tags:
      - jwtToken
      summary: refresh jwtToken
      description: Refresh Token
      operationId: jwtToken#refresh
      parameters:
      - name: Authorization
        in: header
        description: OAuth token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      - name: RefreshRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/JWTTokenRefreshRequestBody'
          required:
          - refresh_token
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/JWTTokenRefreshResponseBody'
            required:
            - access_token
            - refresh_token
            - success
        "400":
          description: Bad Request response.
          schema:
            $ref: '#/definitions/JWTTokenRefreshEmailAlreadyExistResponseBody'
            required:
            - message
            - success
        "401":
          description: Unauthorized response.
          schema:
            $ref: '#/definitions/JWTTokenRefreshUnauthorizedResponseBody'
        "403":
          description: Forbidden response.
          schema:
            $ref: '#/definitions/JWTTokenRefreshInvalidScopesResponseBody'
        "500":
          description: Internal Server Error response.
          schema:
            $ref: '#/definitions/JWTTokenRefreshUnknownErrorResponseBody'
            required:
            - err
            - success
            - error_code
      schemes:
      - http
      security:
      - OAuth2_header_Authorization: []
  /sign-providers:
    post:
      tags:
      - jwtToken
      summary: auth-providers jwtToken
      description: Register or login by Google, Facebook
      operationId: jwtToken#auth-providers
      parameters:
      - name: Authorization
        in: header
        description: OAuth token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      - name: Auth-ProvidersRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/JWTTokenAuthProvidersRequestBody'
          required:
          - email
          - firstname
          - lastname
          - firebase_id_token
          - firebase_uid
          - firebase_provider
      responses:
        "201":
          description: Created response.
          schema:
            $ref: '#/definitions/JWTTokenAuthProvidersCreatedResponseBody'
            required:
            - access_token
            - refresh_token
            - success
        "400":
          description: Bad Request response.
          schema:
            $ref: '#/definitions/JWTTokenAuthProvidersEmailAlreadyExistResponseBody'
            required:
            - message
            - success
        "401":
          description: Unauthorized response.
          schema:
            $ref: '#/definitions/JWTTokenAuthProvidersUnauthorizedResponseBody'
        "403":
          description: Forbidden response.
          schema:
            $ref: '#/definitions/JWTTokenAuthProvidersInvalidScopesResponseBody'
        "500":
          description: Internal Server Error response.
          schema:
            $ref: '#/definitions/JWTTokenAuthProvidersUnknownErrorResponseBody'
            required:
            - err
            - success
            - error_code
      schemes:
      - http
      security:
      - OAuth2_header_Authorization: []
  /signin:
    post:
      tags:
      - jwtToken
      summary: signin jwtToken
      description: signin
      operationId: jwtToken#signin
      parameters:
      - name: Authorization
        in: header
        description: OAuth token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      - name: SigninRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/JWTTokenSigninRequestBody'
          required:
          - password
          - email
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/JWTTokenSigninResponseBody'
            required:
            - access_token
            - refresh_token
            - success
        "400":
          description: Bad Request response.
          schema:
            $ref: '#/definitions/JWTTokenSigninEmailAlreadyExistResponseBody'
            required:
            - message
            - success
        "401":
          description: Unauthorized response.
          schema:
            $ref: '#/definitions/JWTTokenSigninUnauthorizedResponseBody'
        "403":
          description: Forbidden response.
          schema:
            $ref: '#/definitions/JWTTokenSigninInvalidScopesResponseBody'
        "500":
          description: Internal Server Error response.
          schema:
            $ref: '#/definitions/JWTTokenSigninUnknownErrorResponseBody'
            required:
            - err
            - success
            - error_code
      schemes:
      - http
      security:
      - OAuth2_header_Authorization: []
  /signup:
    post:
      tags:
      - jwtToken
      summary: signup jwtToken
      description: signup to generate jwt token
      operationId: jwtToken#signup
      parameters:
      - name: Authorization
        in: header
        description: OAuth token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      - name: SignupRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/JWTTokenSignupRequestBody'
          required:
          - firstname
          - lastname
          - password
          - email
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/JWTTokenSignupResponseBody'
            required:
            - access_token
            - refresh_token
            - success
        "400":
          description: Bad Request response.
          schema:
            $ref: '#/definitions/JWTTokenSignupEmailAlreadyExistResponseBody'
            required:
            - message
            - success
        "401":
          description: Unauthorized response.
          schema:
            $ref: '#/definitions/JWTTokenSignupUnauthorizedResponseBody'
        "403":
          description: Forbidden response.
          schema:
            $ref: '#/definitions/JWTTokenSignupInvalidScopesResponseBody'
        "500":
          description: Internal Server Error response.
          schema:
            $ref: '#/definitions/JWTTokenSignupUnknownErrorResponseBody'
            required:
            - err
            - success
            - error_code
      schemes:
      - http
      security:
      - OAuth2_header_Authorization: []
  /web/product/{id}:
    get:
      tags:
      - products
      summary: getProduct products
      description: Get one product
      operationId: products#getProduct
      parameters:
      - name: id
        in: path
        description: Unique ID of the product
        required: true
        type: string
        format: uuid
      - name: Authorization
        in: header
        description: OAuth token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      - name: jwtToken
        in: header
        description: Jwt token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/ProductsGetProductResponseBody'
            required:
            - product
            - success
        "500":
          description: Internal Server Error response.
          schema:
            $ref: '#/definitions/ProductsGetProductUnknownErrorResponseBody'
            required:
            - err
            - success
            - error_code
      schemes:
      - http
      security:
      - OAuth2_header_Authorization: []
        jwt_header_jwtToken: []
    put:
      tags:
      - products
      summary: updateProduct products
      description: Update one product
      operationId: products#updateProduct
      parameters:
      - name: id
        in: path
        required: true
        type: string
        format: uuid
      - name: Authorization
        in: header
        description: OAuth token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      - name: jwtToken
        in: header
        description: Jwt token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      - name: UpdateProductRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/ProductsUpdateProductRequestBody'
          required:
          - product
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/ProductsUpdateProductResponseBody'
            required:
            - product
            - success
        "500":
          description: Internal Server Error response.
          schema:
            $ref: '#/definitions/ProductsUpdateProductUnknownErrorResponseBody'
            required:
            - err
            - success
            - error_code
      schemes:
      - http
      security:
      - OAuth2_header_Authorization: []
        jwt_header_jwtToken: []
  /web/product/add:
    post:
      tags:
      - products
      summary: createProduct products
      description: Create one product
      operationId: products#createProduct
      parameters:
      - name: Authorization
        in: header
        description: OAuth token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      - name: jwtToken
        in: header
        description: Jwt token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      - name: CreateProductRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/ProductsCreateProductRequestBody'
          required:
          - product
      responses:
        "201":
          description: Created response.
          schema:
            $ref: '#/definitions/ProductsCreateProductResponseBody'
            required:
            - product
            - success
        "500":
          description: Internal Server Error response.
          schema:
            $ref: '#/definitions/ProductsCreateProductUnknownErrorResponseBody'
            required:
            - err
            - success
            - error_code
      schemes:
      - http
      security:
      - OAuth2_header_Authorization: []
        jwt_header_jwtToken: []
  /web/product/remove/{id}:
    delete:
      tags:
      - products
      summary: deleteProduct products
      description: Delete one product by ID
      operationId: products#deleteProduct
      parameters:
      - name: id
        in: path
        required: true
        type: string
        format: uuid
      - name: Authorization
        in: header
        description: OAuth token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      - name: jwtToken
        in: header
        description: Jwt token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/ProductsDeleteProductResponseBody'
            required:
            - success
        "500":
          description: Internal Server Error response.
          schema:
            $ref: '#/definitions/ProductsDeleteProductUnknownErrorResponseBody'
            required:
            - err
            - success
            - error_code
      schemes:
      - http
      security:
      - OAuth2_header_Authorization: []
        jwt_header_jwtToken: []
  /web/products:
    get:
      tags:
      - products
      summary: getAllProducts products
      description: Get All products
      operationId: products#getAllProducts
      parameters:
      - name: Authorization
        in: header
        description: OAuth token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      - name: jwtToken
        in: header
        description: Jwt token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/ProductsGetAllProductsResponseBody'
            required:
            - products
            - success
        "500":
          description: Internal Server Error response.
          schema:
            $ref: '#/definitions/ProductsGetAllProductsUnknownErrorResponseBody'
            required:
            - err
            - success
            - error_code
      schemes:
      - http
      security:
      - OAuth2_header_Authorization: []
        jwt_header_jwtToken: []
  /web/products/category/{category}:
    get:
      tags:
      - products
      summary: getAllProductsByCategory products
      description: Get All products by category
      operationId: products#getAllProductsByCategory
      parameters:
      - name: category
        in: path
        required: true
        type: string
        default: nothing
        enum:
        - men
        - women
        - hat
        - jacket
        - sneaker
        - nothing
      - name: Authorization
        in: header
        description: OAuth token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      - name: jwtToken
        in: header
        description: Jwt token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/ProductsGetAllProductsByCategoryResponseBody'
            required:
            - products
            - success
        "500":
          description: Internal Server Error response.
          schema:
            $ref: '#/definitions/ProductsGetAllProductsByCategoryUnknownErrorResponseBody'
            required:
            - err
            - success
            - error_code
      schemes:
      - http
      security:
      - OAuth2_header_Authorization: []
        jwt_header_jwtToken: []
  /web/user/{id}:
    get:
      tags:
      - users
      summary: getUser users
      description: Get one User
      operationId: users#getUser
      parameters:
      - name: id
        in: path
        description: Unique ID of the User
        required: true
        type: string
        format: uuid
      - name: Authorization
        in: header
        description: OAuth token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      - name: jwtToken
        in: header
        description: Jwt token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/UsersGetUserResponseBody'
            required:
            - user
            - success
        "500":
          description: Internal Server Error response.
          schema:
            $ref: '#/definitions/UsersGetUserUnknownErrorResponseBody'
            required:
            - err
            - success
            - error_code
      schemes:
      - http
      security:
      - OAuth2_header_Authorization: []
        jwt_header_jwtToken: []
    put:
      tags:
      - users
      summary: updateUser users
      description: Update one User
      operationId: users#updateUser
      parameters:
      - name: id
        in: path
        required: true
        type: string
        format: uuid
      - name: Authorization
        in: header
        description: OAuth token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      - name: jwtToken
        in: header
        description: Jwt token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      - name: UpdateUserRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/UsersUpdateUserRequestBody'
          required:
          - User
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/UsersUpdateUserResponseBody'
            required:
            - user
            - success
        "500":
          description: Internal Server Error response.
          schema:
            $ref: '#/definitions/UsersUpdateUserUnknownErrorResponseBody'
            required:
            - err
            - success
            - error_code
      schemes:
      - http
      security:
      - OAuth2_header_Authorization: []
        jwt_header_jwtToken: []
  /web/user/add:
    post:
      tags:
      - users
      summary: createUser users
      description: Create one User
      operationId: users#createUser
      parameters:
      - name: Authorization
        in: header
        description: OAuth token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      - name: jwtToken
        in: header
        description: Jwt token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      - name: CreateUserRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/UsersCreateUserRequestBody'
          required:
          - user
      responses:
        "201":
          description: Created response.
          schema:
            $ref: '#/definitions/UsersCreateUserResponseBody'
            required:
            - user
            - success
        "500":
          description: Internal Server Error response.
          schema:
            $ref: '#/definitions/UsersCreateUserUnknownErrorResponseBody'
            required:
            - err
            - success
            - error_code
      schemes:
      - http
      security:
      - OAuth2_header_Authorization: []
        jwt_header_jwtToken: []
  /web/user/remove/{id}:
    delete:
      tags:
      - users
      summary: deleteUser users
      description: Delete one User by ID
      operationId: users#deleteUser
      parameters:
      - name: id
        in: path
        required: true
        type: string
        format: uuid
      - name: Authorization
        in: header
        description: OAuth token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      - name: jwtToken
        in: header
        description: Jwt token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/UsersDeleteUserResponseBody'
            required:
            - success
        "500":
          description: Internal Server Error response.
          schema:
            $ref: '#/definitions/UsersDeleteUserUnknownErrorResponseBody'
            required:
            - err
            - success
            - error_code
      schemes:
      - http
      security:
      - OAuth2_header_Authorization: []
        jwt_header_jwtToken: []
  /web/users:
    get:
      tags:
      - users
      summary: getAllusers users
      description: Get All users
      operationId: users#getAllusers
      parameters:
      - name: Authorization
        in: header
        description: OAuth token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      - name: jwtToken
        in: header
        description: Jwt token
        required: false
        type: string
        pattern: ^Bearer [^ ]+$
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/UsersGetAllusersResponseBody'
            required:
            - users
            - success
        "500":
          description: Internal Server Error response.
          schema:
            $ref: '#/definitions/UsersGetAllusersUnknownErrorResponseBody'
            required:
            - err
            - success
            - error_code
      schemes:
      - http
      security:
      - OAuth2_header_Authorization: []
        jwt_header_jwtToken: []
definitions:
  JWTTokenAuthProvidersBadRequestResponseBody:
    title: JWTTokenAuthProvidersBadRequestResponseBody
    type: object
    properties:
      access_token:
        type: string
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      refresh_token:
        type: string
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      success:
        type: boolean
        example: true
    example:
      access_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      refresh_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      success: true
    required:
    - access_token
    - refresh_token
    - success
  JWTTokenAuthProvidersCreatedResponseBody:
    title: JWTTokenAuthProvidersCreatedResponseBody
    type: object
    properties:
      access_token:
        type: string
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      refresh_token:
        type: string
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      success:
        type: boolean
        example: false
    example:
      access_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      refresh_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      success: true
    required:
    - access_token
    - refresh_token
    - success
  JWTTokenAuthProvidersEmailAlreadyExistResponseBody:
    title: JWTTokenAuthProvidersEmailAlreadyExistResponseBody
    type: object
    properties:
      message:
        type: string
        example: Id rerum provident consequuntur.
      success:
        type: boolean
        default: false
        example: false
    description: When email already exist
    example:
      message: Voluptas vitae.
      success: false
    required:
    - message
    - success
  JWTTokenAuthProvidersInvalidScopesResponseBody:
    title: JWTTokenAuthProvidersInvalidScopesResponseBody
    type: string
    description: Token scopes are invalid
    example: Est labore expedita repudiandae.
  JWTTokenAuthProvidersRequestBody:
    title: JWTTokenAuthProvidersRequestBody
    type: object
    properties:
      email:
        type: string
        example: guillaume@epitech.eu
        format: email
      firebase_id_token:
        type: string
        example: nfq
        minLength: 400
      firebase_provider:
        type: string
        example: facebook.com
      firebase_uid:
        type: string
        example: zgmURRUlcJfgDMRyjJ20xs7Rxxw2
        minLength: 15
      firstname:
        type: string
        example: Guillaume
        minLength: 3
        maxLength: 15
      lastname:
        type: string
        example: Morin
        minLength: 3
    example:
      email: guillaume@epitech.eu
      firebase_id_token: ayu
      firebase_provider: facebook.com
      firebase_uid: zgmURRUlcJfgDMRyjJ20xs7Rxxw2
      firstname: Guillaume
      lastname: Morin
    required:
    - email
    - firstname
    - lastname
    - firebase_id_token
    - firebase_uid
    - firebase_provider
  JWTTokenAuthProvidersUnauthorizedResponseBody:
    title: JWTTokenAuthProvidersUnauthorizedResponseBody
    type: string
    description: Identifiers are invalid
    example: Veniam inventore perspiciatis magnam quam in et.
  JWTTokenAuthProvidersUnknownErrorResponseBody:
    title: JWTTokenAuthProvidersUnknownErrorResponseBody
    type: object
    properties:
      err:
        type: string
        example: sql no rows affected
      error_code:
        type: string
        example: TX_UPDATE_ITEM
      success:
        type: boolean
        default: false
        example: false
    description: Error not identified (500)
    example:
      err: sql no rows affected
      error_code: TX_UPDATE_ITEM
      success: false
    required:
    - err
    - success
    - error_code
  JWTTokenRefreshEmailAlreadyExistResponseBody:
    title: JWTTokenRefreshEmailAlreadyExistResponseBody
    type: object
    properties:
      message:
        type: string
        example: Corporis in dolor velit blanditiis.
      success:
        type: boolean
        default: false
        example: true
    description: When email already exist
    example:
      message: Dicta accusamus.
      success: false
    required:
    - message
    - success
  JWTTokenRefreshInvalidScopesResponseBody:
    title: JWTTokenRefreshInvalidScopesResponseBody
    type: string
    description: Token scopes are invalid
    example: Quis vitae dolorum dolorem enim et.
  JWTTokenRefreshRequestBody:
    title: JWTTokenRefreshRequestBody
    type: object
    properties:
      refresh_token:
        type: string
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
    example:
      refresh_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
    required:
    - refresh_token
  JWTTokenRefreshResponseBody:
    title: JWTTokenRefreshResponseBody
    type: object
    properties:
      access_token:
        type: string
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      refresh_token:
        type: string
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      success:
        type: boolean
        example: false
    example:
      access_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      refresh_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      success: false
    required:
    - access_token
    - refresh_token
    - success
  JWTTokenRefreshUnauthorizedResponseBody:
    title: JWTTokenRefreshUnauthorizedResponseBody
    type: string
    description: Identifiers are invalid
    example: Natus est incidunt impedit voluptatum.
  JWTTokenRefreshUnknownErrorResponseBody:
    title: JWTTokenRefreshUnknownErrorResponseBody
    type: object
    properties:
      err:
        type: string
        example: sql no rows affected
      error_code:
        type: string
        example: TX_UPDATE_ITEM
      success:
        type: boolean
        default: false
        example: true
    description: Error not identified (500)
    example:
      err: sql no rows affected
      error_code: TX_UPDATE_ITEM
      success: false
    required:
    - err
    - success
    - error_code
  JWTTokenSigninEmailAlreadyExistResponseBody:
    title: JWTTokenSigninEmailAlreadyExistResponseBody
    type: object
    properties:
      message:
        type: string
        example: Consequatur soluta voluptates vel nihil corporis.
      success:
        type: boolean
        default: false
        example: true
    description: When email already exist
    example:
      message: Illo quia exercitationem culpa minus labore sint.
      success: true
    required:
    - message
    - success
  JWTTokenSigninInvalidScopesResponseBody:
    title: JWTTokenSigninInvalidScopesResponseBody
    type: string
    description: Token scopes are invalid
    example: Et est occaecati voluptas et sit maxime.
  JWTTokenSigninRequestBody:
    title: JWTTokenSigninRequestBody
    type: object
    properties:
      email:
        type: string
        example: guillaume@epitech.eu
        format: email
      password:
        type: string
        description: Minimum 8 charactères / Chiffre Obligatoire
        example: JeSuisUnTest974
        pattern: \d
        minLength: 8
    example:
      email: guillaume@epitech.eu
      password: JeSuisUnTest974
    required:
    - password
    - email
  JWTTokenSigninResponseBody:
    title: JWTTokenSigninResponseBody
    type: object
    properties:
      access_token:
        type: string
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      refresh_token:
        type: string
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      success:
        type: boolean
        example: true
    example:
      access_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      refresh_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      success: false
    required:
    - access_token
    - refresh_token
    - success
  JWTTokenSigninUnauthorizedResponseBody:
    title: JWTTokenSigninUnauthorizedResponseBody
    type: string
    description: Identifiers are invalid
    example: Est voluptas ab ex.
  JWTTokenSigninUnknownErrorResponseBody:
    title: JWTTokenSigninUnknownErrorResponseBody
    type: object
    properties:
      err:
        type: string
        example: sql no rows affected
      error_code:
        type: string
        example: TX_UPDATE_ITEM
      success:
        type: boolean
        default: false
        example: true
    description: Error not identified (500)
    example:
      err: sql no rows affected
      error_code: TX_UPDATE_ITEM
      success: true
    required:
    - err
    - success
    - error_code
  JWTTokenSignupEmailAlreadyExistResponseBody:
    title: JWTTokenSignupEmailAlreadyExistResponseBody
    type: object
    properties:
      message:
        type: string
        example: Facilis excepturi eaque et quasi.
      success:
        type: boolean
        default: false
        example: false
    description: When email already exist
    example:
      message: Eos culpa.
      success: true
    required:
    - message
    - success
  JWTTokenSignupInvalidScopesResponseBody:
    title: JWTTokenSignupInvalidScopesResponseBody
    type: string
    description: Token scopes are invalid
    example: Nobis porro ullam aliquam provident.
  JWTTokenSignupRequestBody:
    title: JWTTokenSignupRequestBody
    type: object
    properties:
      birthday:
        type: string
        default: ""
        example: Sed dolores illum velit dicta.
      email:
        type: string
        example: guillaume@epitech.eu
        format: email
      firstname:
        type: string
        example: Guillaume
        minLength: 3
        maxLength: 15
      lastname:
        type: string
        example: Morin
        minLength: 3
      password:
        type: string
        description: Minimum 8 charactères / Chiffre Obligatoire
        example: JeSuisUnTest974
        pattern: \d
        minLength: 8
      phone:
        type: string
        default: ""
        example: +262 692 12 34 56
    description: Use client ID and client secret to oAuth
    example:
      birthday: Necessitatibus accusamus est.
      email: guillaume@epitech.eu
      firstname: Guillaume
      lastname: Morin
      password: JeSuisUnTest974
      phone: +262 692 12 34 56
    required:
    - firstname
    - lastname
    - password
    - email
  JWTTokenSignupResponseBody:
    title: JWTTokenSignupResponseBody
    type: object
    properties:
      access_token:
        type: string
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      refresh_token:
        type: string
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      success:
        type: boolean
        example: false
    example:
      access_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      refresh_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      success: true
    required:
    - access_token
    - refresh_token
    - success
  JWTTokenSignupUnauthorizedResponseBody:
    title: JWTTokenSignupUnauthorizedResponseBody
    type: string
    description: Identifiers are invalid
    example: Harum recusandae quia eius iste atque.
  JWTTokenSignupUnknownErrorResponseBody:
    title: JWTTokenSignupUnknownErrorResponseBody
    type: object
    properties:
      err:
        type: string
        example: sql no rows affected
      error_code:
        type: string
        example: TX_UPDATE_ITEM
      success:
        type: boolean
        default: false
        example: true
    description: Error not identified (500)
    example:
      err: sql no rows affected
      error_code: TX_UPDATE_ITEM
      success: false
    required:
    - err
    - success
    - error_code
  OAuthOAuthBadRequestResponseBody:
    title: OAuthOAuthBadRequestResponseBody
    type: object
    properties:
      access_token:
        type: string
        example: Perferendis tenetur.
      expires_in:
        type: integer
        example: 8734538406164693481
        format: int64
      success:
        type: boolean
        example: false
      token_type:
        type: string
        example: Ut modi.
    example:
      access_token: Atque est id ut molestiae.
      expires_in: 2240999044845948311
      success: true
      token_type: Iusto quo.
    required:
    - access_token
    - token_type
    - expires_in
    - success
  OAuthOAuthCreatedResponseBody:
    title: OAuthOAuthCreatedResponseBody
    type: object
    properties:
      access_token:
        type: string
        example: Voluptatem et dolores beatae occaecati quidem quaerat.
      expires_in:
        type: integer
        example: 2492860541684370550
        format: int64
      success:
        type: boolean
        example: false
      token_type:
        type: string
        example: Qui nihil qui enim atque quisquam.
    example:
      access_token: Officia enim magni sint esse eos et.
      expires_in: 5854509010297659658
      success: true
      token_type: Enim aut velit ea voluptatem.
    required:
    - access_token
    - token_type
    - expires_in
    - success
  OAuthOAuthInvalidScopesResponseBody:
    title: OAuthOAuthInvalidScopesResponseBody
    type: string
    description: Token scopes are invalid
    example: Occaecati laborum.
  OAuthOAuthRequestBody:
    title: OAuthOAuthRequestBody
    type: object
    properties:
      client_id:
        type: string
        example: Aut maxime.
      client_secret:
        type: string
        example: Similique molestias enim.
      grant_type:
        type: string
        example: Et voluptatum minima adipisci minus.
    example:
      client_id: Excepturi ab assumenda eum nam.
      client_secret: Fuga ratione ut error voluptas ut.
      grant_type: Veniam sed voluptatem reiciendis itaque.
    required:
    - client_id
    - client_secret
    - grant_type
  OAuthOAuthUnauthorizedResponseBody:
    title: OAuthOAuthUnauthorizedResponseBody
    type: string
    description: Identifiers are invalid
    example: Explicabo dolorum neque repellat velit cupiditate quis.
  OAuthOAuthUnknownErrorResponseBody:
    title: OAuthOAuthUnknownErrorResponseBody
    type: object
    properties:
      err:
        type: string
        example: sql no rows affected
      error_code:
        type: string
        example: TX_UPDATE_ITEM
      success:
        type: boolean
        default: false
        example: true
    description: Error not identified (500)
    example:
      err: sql no rows affected
      error_code: TX_UPDATE_ITEM
      success: false
    required:
    - err
    - success
    - error_code
  ProductsCreateProductRequestBody:
    title: ProductsCreateProductRequestBody
    type: object
    properties:
      product:
        $ref: '#/definitions/payloadProductRequestBody'
    example:
      product:
        category: men
        cover: https://i.ibb.co/ypkgK0X/blue-beanie.png
        name: Guillaume
        price: 69
    required:
    - product
  ProductsCreateProductResponseBody:
    title: ProductsCreateProductResponseBody
    type: object
    properties:
      product:
        $ref: '#/definitions/resProductResponseBody'
      success:
        type: boolean
        example: false
    example:
      product:
        category: men
        cover: https://i.ibb.co/ypkgK0X/blue-beanie.png
        id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
        name: Guillaume
        price: 69
      success: true
    required:
    - product
    - success
  ProductsCreateProductUnknownErrorResponseBody:
    title: ProductsCreateProductUnknownErrorResponseBody
    type: object
    properties:
      err:
        type: string
        example: sql no rows affected
      error_code:
        type: string
        example: TX_UPDATE_ITEM
      success:
        type: boolean
        default: false
        example: true
    description: Error not identified (500)
    example:
      err: sql no rows affected
      error_code: TX_UPDATE_ITEM
      success: false
    required:
    - err
    - success
    - error_code
  ProductsDeleteProductResponseBody:
    title: ProductsDeleteProductResponseBody
    type: object
    properties:
      success:
        type: boolean
        example: true
    example:
      success: false
    required:
    - success
  ProductsDeleteProductUnknownErrorResponseBody:
    title: ProductsDeleteProductUnknownErrorResponseBody
    type: object
    properties:
      err:
        type: string
        example: sql no rows affected
      error_code:
        type: string
        example: TX_UPDATE_ITEM
      success:
        type: boolean
        default: false
        example: true
    description: Error not identified (500)
    example:
      err: sql no rows affected
      error_code: TX_UPDATE_ITEM
      success: true
    required:
    - err
    - success
    - error_code
  ProductsGetAllProductsByCategoryResponseBody:
    title: ProductsGetAllProductsByCategoryResponseBody
    type: object
    properties:
      products:
        type: array
        items:
          $ref: '#/definitions/resProductResponseBody'
        description: Result is an array of object
        example:
        - category: men
          cover: https://i.ibb.co/ypkgK0X/blue-beanie.png
          id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
          name: Guillaume
          price: 69
        - category: men
          cover: https://i.ibb.co/ypkgK0X/blue-beanie.png
          id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
          name: Guillaume
          price: 69
      success:
        type: boolean
        example: true
    example:
      products:
      - category: men
        cover: https://i.ibb.co/ypkgK0X/blue-beanie.png
        id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
        name: Guillaume
        price: 69
      - category: men
        cover: https://i.ibb.co/ypkgK0X/blue-beanie.png
        id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
        name: Guillaume
        price: 69
      - category: men
        cover: https://i.ibb.co/ypkgK0X/blue-beanie.png
        id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
        name: Guillaume
        price: 69
      success: false
    required:
    - products
    - success
  ProductsGetAllProductsByCategoryUnknownErrorResponseBody:
    title: ProductsGetAllProductsByCategoryUnknownErrorResponseBody
    type: object
    properties:
      err:
        type: string
        example: sql no rows affected
      error_code:
        type: string
        example: TX_UPDATE_ITEM
      success:
        type: boolean
        default: false
        example: true
    description: Error not identified (500)
    example:
      err: sql no rows affected
      error_code: TX_UPDATE_ITEM
      success: true
    required:
    - err
    - success
    - error_code
  ProductsGetAllProductsResponseBody:
    title: ProductsGetAllProductsResponseBody
    type: object
    properties:
      products:
        type: array
        items:
          $ref: '#/definitions/resProductResponseBody'
        description: All products by category
        example:
        - category: men
          cover: https://i.ibb.co/ypkgK0X/blue-beanie.png
          id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
          name: Guillaume
          price: 69
        - category: men
          cover: https://i.ibb.co/ypkgK0X/blue-beanie.png
          id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
          name: Guillaume
          price: 69
        - category: men
          cover: https://i.ibb.co/ypkgK0X/blue-beanie.png
          id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
          name: Guillaume
          price: 69
      success:
        type: boolean
        example: false
    example:
      products:
      - category: men
        cover: https://i.ibb.co/ypkgK0X/blue-beanie.png
        id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
        name: Guillaume
        price: 69
      - category: men
        cover: https://i.ibb.co/ypkgK0X/blue-beanie.png
        id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
        name: Guillaume
        price: 69
      - category: men
        cover: https://i.ibb.co/ypkgK0X/blue-beanie.png
        id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
        name: Guillaume
        price: 69
      - category: men
        cover: https://i.ibb.co/ypkgK0X/blue-beanie.png
        id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
        name: Guillaume
        price: 69
      success: true
    required:
    - products
    - success
  ProductsGetAllProductsUnknownErrorResponseBody:
    title: ProductsGetAllProductsUnknownErrorResponseBody
    type: object
    properties:
      err:
        type: string
        example: sql no rows affected
      error_code:
        type: string
        example: TX_UPDATE_ITEM
      success:
        type: boolean
        default: false
        example: false
    description: Error not identified (500)
    example:
      err: sql no rows affected
      error_code: TX_UPDATE_ITEM
      success: false
    required:
    - err
    - success
    - error_code
  ProductsGetProductResponseBody:
    title: ProductsGetProductResponseBody
    type: object
    properties:
      product:
        $ref: '#/definitions/resProductResponseBody'
      success:
        type: boolean
        example: false
    example:
      product:
        category: men
        cover: https://i.ibb.co/ypkgK0X/blue-beanie.png
        id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
        name: Guillaume
        price: 69
      success: false
    required:
    - product
    - success
  ProductsGetProductUnknownErrorResponseBody:
    title: ProductsGetProductUnknownErrorResponseBody
    type: object
    properties:
      err:
        type: string
        example: sql no rows affected
      error_code:
        type: string
        example: TX_UPDATE_ITEM
      success:
        type: boolean
        default: false
        example: true
    description: Error not identified (500)
    example:
      err: sql no rows affected
      error_code: TX_UPDATE_ITEM
      success: false
    required:
    - err
    - success
    - error_code
  ProductsUpdateProductRequestBody:
    title: ProductsUpdateProductRequestBody
    type: object
    properties:
      product:
        $ref: '#/definitions/payloadProductRequestBody'
    example:
      product:
        category: men
        cover: https://i.ibb.co/ypkgK0X/blue-beanie.png
        name: Guillaume
        price: 69
    required:
    - product
  ProductsUpdateProductResponseBody:
    title: ProductsUpdateProductResponseBody
    type: object
    properties:
      product:
        $ref: '#/definitions/resProductResponseBody'
      success:
        type: boolean
        example: false
    example:
      product:
        category: men
        cover: https://i.ibb.co/ypkgK0X/blue-beanie.png
        id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
        name: Guillaume
        price: 69
      success: true
    required:
    - product
    - success
  ProductsUpdateProductUnknownErrorResponseBody:
    title: ProductsUpdateProductUnknownErrorResponseBody
    type: object
    properties:
      err:
        type: string
        example: sql no rows affected
      error_code:
        type: string
        example: TX_UPDATE_ITEM
      success:
        type: boolean
        default: false
        example: true
    description: Error not identified (500)
    example:
      err: sql no rows affected
      error_code: TX_UPDATE_ITEM
      success: false
    required:
    - err
    - success
    - error_code
  UsersCreateUserRequestBody:
    title: UsersCreateUserRequestBody
    type: object
    properties:
      user:
        $ref: '#/definitions/payloadUserRequestBody'
    example:
      user:
        birthday: 01/09/2002
        email: guillaume.morin@epitech.eu
        firstname: Guillaume
        lastname: Morin
        phone: +262 692 12 34 56
    required:
    - user
  UsersCreateUserResponseBody:
    title: UsersCreateUserResponseBody
    type: object
    properties:
      success:
        type: boolean
        example: true
      user:
        $ref: '#/definitions/resUserResponseBody'
    example:
      success: false
      user:
        birthday: 01/09/2002
        email: guillaume.morin@epitech.eu
        firstname: Guillaume
        id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
        lastname: Morin
        phone: +262 692 12 34 56
    required:
    - user
    - success
  UsersCreateUserUnknownErrorResponseBody:
    title: UsersCreateUserUnknownErrorResponseBody
    type: object
    properties:
      err:
        type: string
        example: sql no rows affected
      error_code:
        type: string
        example: TX_UPDATE_ITEM
      success:
        type: boolean
        default: false
        example: false
    description: Error not identified (500)
    example:
      err: sql no rows affected
      error_code: TX_UPDATE_ITEM
      success: false
    required:
    - err
    - success
    - error_code
  UsersDeleteUserResponseBody:
    title: UsersDeleteUserResponseBody
    type: object
    properties:
      success:
        type: boolean
        example: false
    example:
      success: false
    required:
    - success
  UsersDeleteUserUnknownErrorResponseBody:
    title: UsersDeleteUserUnknownErrorResponseBody
    type: object
    properties:
      err:
        type: string
        example: sql no rows affected
      error_code:
        type: string
        example: TX_UPDATE_ITEM
      success:
        type: boolean
        default: false
        example: false
    description: Error not identified (500)
    example:
      err: sql no rows affected
      error_code: TX_UPDATE_ITEM
      success: false
    required:
    - err
    - success
    - error_code
  UsersGetAllusersResponseBody:
    title: UsersGetAllusersResponseBody
    type: object
    properties:
      success:
        type: boolean
        example: false
      users:
        type: array
        items:
          $ref: '#/definitions/resUserResponseBody'
        description: All users by category
        example:
        - birthday: 01/09/2002
          email: guillaume.morin@epitech.eu
          firstname: Guillaume
          id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
          lastname: Morin
          phone: +262 692 12 34 56
        - birthday: 01/09/2002
          email: guillaume.morin@epitech.eu
          firstname: Guillaume
          id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
          lastname: Morin
          phone: +262 692 12 34 56
    example:
      success: false
      users:
      - birthday: 01/09/2002
        email: guillaume.morin@epitech.eu
        firstname: Guillaume
        id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
        lastname: Morin
        phone: +262 692 12 34 56
      - birthday: 01/09/2002
        email: guillaume.morin@epitech.eu
        firstname: Guillaume
        id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
        lastname: Morin
        phone: +262 692 12 34 56
    required:
    - users
    - success
  UsersGetAllusersUnknownErrorResponseBody:
    title: UsersGetAllusersUnknownErrorResponseBody
    type: object
    properties:
      err:
        type: string
        example: sql no rows affected
      error_code:
        type: string
        example: TX_UPDATE_ITEM
      success:
        type: boolean
        default: false
        example: true
    description: Error not identified (500)
    example:
      err: sql no rows affected
      error_code: TX_UPDATE_ITEM
      success: false
    required:
    - err
    - success
    - error_code
  UsersGetUserResponseBody:
    title: UsersGetUserResponseBody
    type: object
    properties:
      success:
        type: boolean
        example: true
      user:
        $ref: '#/definitions/resUserResponseBody'
    example:
      success: false
      user:
        birthday: 01/09/2002
        email: guillaume.morin@epitech.eu
        firstname: Guillaume
        id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
        lastname: Morin
        phone: +262 692 12 34 56
    required:
    - user
    - success
  UsersGetUserUnknownErrorResponseBody:
    title: UsersGetUserUnknownErrorResponseBody
    type: object
    properties:
      err:
        type: string
        example: sql no rows affected
      error_code:
        type: string
        example: TX_UPDATE_ITEM
      success:
        type: boolean
        default: false
        example: true
    description: Error not identified (500)
    example:
      err: sql no rows affected
      error_code: TX_UPDATE_ITEM
      success: true
    required:
    - err
    - success
    - error_code
  UsersUpdateUserRequestBody:
    title: UsersUpdateUserRequestBody
    type: object
    properties:
      User:
        $ref: '#/definitions/payloadUserRequestBody'
    example:
      User:
        birthday: 01/09/2002
        email: guillaume.morin@epitech.eu
        firstname: Guillaume
        lastname: Morin
        phone: +262 692 12 34 56
    required:
    - User
  UsersUpdateUserResponseBody:
    title: UsersUpdateUserResponseBody
    type: object
    properties:
      success:
        type: boolean
        example: false
      user:
        $ref: '#/definitions/resUserResponseBody'
    example:
      success: true
      user:
        birthday: 01/09/2002
        email: guillaume.morin@epitech.eu
        firstname: Guillaume
        id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
        lastname: Morin
        phone: +262 692 12 34 56
    required:
    - user
    - success
  UsersUpdateUserUnknownErrorResponseBody:
    title: UsersUpdateUserUnknownErrorResponseBody
    type: object
    properties:
      err:
        type: string
        example: sql no rows affected
      error_code:
        type: string
        example: TX_UPDATE_ITEM
      success:
        type: boolean
        default: false
        example: true
    description: Error not identified (500)
    example:
      err: sql no rows affected
      error_code: TX_UPDATE_ITEM
      success: false
    required:
    - err
    - success
    - error_code
  payloadProductRequestBody:
    title: payloadProductRequestBody
    type: object
    properties:
      category:
        type: string
        default: nothing
        example: men
        enum:
        - men
        - women
        - hat
        - jacket
        - sneaker
        - nothing
      cover:
        type: string
        example: https://i.ibb.co/ypkgK0X/blue-beanie.png
      name:
        type: string
        example: Guillaume
        minLength: 3
      price:
        type: number
        example: 69
        minimum: 0
    example:
      category: men
      cover: https://i.ibb.co/ypkgK0X/blue-beanie.png
      name: Guillaume
      price: 69
    required:
    - name
    - price
    - cover
    - category
  payloadUserRequestBody:
    title: payloadUserRequestBody
    type: object
    properties:
      birthday:
        type: string
        default: ""
        example: 01/09/2002
      email:
        type: string
        example: guillaume.morin@epitech.eu
        format: email
      firstname:
        type: string
        example: Guillaume
      lastname:
        type: string
        example: Morin
      phone:
        type: string
        default: ""
        example: +262 692 12 34 56
    example:
      birthday: 01/09/2002
      email: guillaume.morin@epitech.eu
      firstname: Guillaume
      lastname: Morin
      phone: +262 692 12 34 56
  resProductResponseBody:
    title: resProductResponseBody
    type: object
    properties:
      category:
        type: string
        example: men
      cover:
        type: string
        example: https://i.ibb.co/ypkgK0X/blue-beanie.png
      id:
        type: string
        example: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
        format: uuid
      name:
        type: string
        example: Guillaume
      price:
        type: number
        example: 69
        format: double
    example:
      category: men
      cover: https://i.ibb.co/ypkgK0X/blue-beanie.png
      id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
      name: Guillaume
      price: 69
    required:
    - id
    - name
    - price
    - cover
    - category
  resUserResponseBody:
    title: resUserResponseBody
    type: object
    properties:
      birthday:
        type: string
        default: ""
        example: 01/09/2002
      email:
        type: string
        example: guillaume.morin@epitech.eu
        format: email
      firstname:
        type: string
        example: Guillaume
      id:
        type: string
        example: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
        format: uuid
      lastname:
        type: string
        example: Morin
      phone:
        type: string
        default: ""
        example: +262 692 12 34 56
    example:
      birthday: 01/09/2002
      email: guillaume.morin@epitech.eu
      firstname: Guillaume
      id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
      lastname: Morin
      phone: +262 692 12 34 56
    required:
    - id
    - email
securityDefinitions:
  OAuth2_header_Authorization:
    type: oauth2
    description: Use OAuth2 to authenticate
    flow: application
    tokenUrl: /authorization
    scopes:
      api:read: Provides read access
  jwt_header_jwtToken:
    type: apiKey
    description: |-
      Secures endpoint by requiring a valid JWT token retrieved via the signin endpoint. Supports scopes "api:read" and "api:write".

      **Security Scopes**:
        * `api:read`: Read-only access
        * `api:write`: Read and write access
    name: jwtToken
    in: header
