swagger: "2.0"
info:
  title: Starter Pack
  description: Best API REST building with GoaDesign
  contact:
    name: Thomas LEMAITRE
    email: support@squirrel.fr
    url: https://www.squirrel.fr/
  license:
    name: SQUIRREL X GM
    url: https://www.squirrel.fr/
  version: "1.0"
host: localhost:8088
consumes:
- application/json
- application/xml
- application/gob
produces:
- application/json
- application/xml
- application/gob
paths:
  /authorization:
    post:
      tags:
      - oAuth
      summary: oAuth oAuth
      description: oAuth
      operationId: oAuth#oAuth
      parameters:
      - name: OAuthRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/OAuthOAuthRequestBody'
          required:
          - client_id
          - client_secret
          - grant_type
      responses:
        "201":
          description: Created response.
          schema:
            $ref: '#/definitions/OAuthOAuthCreatedResponseBody'
            required:
            - access_token
            - token_type
            - expires_in
            - success
        "400":
          description: Bad Request response.
          schema:
            $ref: '#/definitions/OAuthOAuthBadRequestResponseBody'
            required:
            - access_token
            - token_type
            - expires_in
            - success
        "401":
          description: Unauthorized response.
          schema:
            $ref: '#/definitions/OAuthOAuthUnauthorizedResponseBody'
        "403":
          description: Forbidden response.
          schema:
            $ref: '#/definitions/OAuthOAuthInvalidScopesResponseBody'
        "500":
          description: Internal Server Error response.
          schema:
            $ref: '#/definitions/OAuthOAuthUnknownErrorResponseBody'
            required:
            - err
            - success
            - error_code
      schemes:
      - https
  /openapi.json:
    get:
      tags:
      - openapi
      summary: Download openapi3.json
      description: Postman generated by Goa
      externalDocs:
        description: cd Public && live-server to see the Documentation of the API
        url: http://127.0.0.1:8080/
      operationId: openapi#/openapi.json
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
      schemes:
      - https
  /resfresh:
    post:
      tags:
      - jwtToken
      summary: refresh jwtToken
      description: Refresh Token
      operationId: jwtToken#refresh
      parameters:
      - name: RefreshRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/JWTTokenRefreshRequestBody'
          required:
          - refresh_token
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/JWTTokenRefreshResponseBody'
            required:
            - access_token
            - refresh_token
            - success
        "400":
          description: Bad Request response.
          schema:
            $ref: '#/definitions/JWTTokenRefreshEmailAlreadyExistResponseBody'
            required:
            - message
            - success
        "401":
          description: Unauthorized response.
          schema:
            $ref: '#/definitions/JWTTokenRefreshUnauthorizedResponseBody'
        "403":
          description: Forbidden response.
          schema:
            $ref: '#/definitions/JWTTokenRefreshInvalidScopesResponseBody'
        "500":
          description: Internal Server Error response.
          schema:
            $ref: '#/definitions/JWTTokenRefreshUnknownErrorResponseBody'
            required:
            - err
            - success
            - error_code
      schemes:
      - https
  /signin:
    post:
      tags:
      - jwtToken
      summary: signin jwtToken
      description: signin
      operationId: jwtToken#signin
      parameters:
      - name: SigninRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/JWTTokenSigninRequestBody'
          required:
          - password
          - email
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/JWTTokenSigninResponseBody'
            required:
            - access_token
            - refresh_token
            - success
        "400":
          description: Bad Request response.
          schema:
            $ref: '#/definitions/JWTTokenSigninEmailAlreadyExistResponseBody'
            required:
            - message
            - success
        "401":
          description: Unauthorized response.
          schema:
            $ref: '#/definitions/JWTTokenSigninUnauthorizedResponseBody'
        "403":
          description: Forbidden response.
          schema:
            $ref: '#/definitions/JWTTokenSigninInvalidScopesResponseBody'
        "500":
          description: Internal Server Error response.
          schema:
            $ref: '#/definitions/JWTTokenSigninUnknownErrorResponseBody'
            required:
            - err
            - success
            - error_code
      schemes:
      - https
  /signup:
    post:
      tags:
      - jwtToken
      summary: signup jwtToken
      description: signup
      operationId: jwtToken#signup
      parameters:
      - name: SignupRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/JWTTokenSignupRequestBody'
          required:
          - firstname
          - lastname
          - password
          - email
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/JWTTokenSignupResponseBody'
            required:
            - access_token
            - refresh_token
            - success
        "400":
          description: Bad Request response.
          schema:
            $ref: '#/definitions/JWTTokenSignupEmailAlreadyExistResponseBody'
            required:
            - message
            - success
        "401":
          description: Unauthorized response.
          schema:
            $ref: '#/definitions/JWTTokenSignupUnauthorizedResponseBody'
        "403":
          description: Forbidden response.
          schema:
            $ref: '#/definitions/JWTTokenSignupInvalidScopesResponseBody'
        "500":
          description: Internal Server Error response.
          schema:
            $ref: '#/definitions/JWTTokenSignupUnknownErrorResponseBody'
            required:
            - err
            - success
            - error_code
      schemes:
      - https
  /web/book/{id}:
    get:
      tags:
      - book
      summary: getBook book
      description: Get one item
      operationId: book#getBook
      parameters:
      - name: oauth
        in: query
        description: Use to generate Oauth
        required: true
        type: string
      - name: id
        in: path
        required: true
        type: string
        format: uuid
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/BookGetBookResponseBody'
            required:
            - id
            - name
            - price
            - success
        "401":
          description: Unauthorized response.
          schema:
            $ref: '#/definitions/BookGetBookUnauthorizedResponseBody'
        "500":
          description: Internal Server Error response.
          schema:
            $ref: '#/definitions/BookGetBookUnknownErrorResponseBody'
            required:
            - err
            - success
            - error_code
      schemes:
      - https
      security:
      - OAuth2_query_oauth: []
    put:
      tags:
      - book
      summary: updateBook book
      description: Update one item
      operationId: book#updateBook
      parameters:
      - name: id
        in: path
        required: true
        type: string
        format: uuid
      - name: UpdateBookRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/BookUpdateBookRequestBody'
          required:
          - name
          - price
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/BookUpdateBookResponseBody'
            required:
            - id
            - name
            - price
            - success
        "401":
          description: Unauthorized response.
          schema:
            $ref: '#/definitions/BookUpdateBookUnauthorizedResponseBody'
        "500":
          description: Internal Server Error response.
          schema:
            $ref: '#/definitions/BookUpdateBookUnknownErrorResponseBody'
            required:
            - err
            - success
            - error_code
      schemes:
      - https
  /web/book/add:
    post:
      tags:
      - book
      summary: createBook book
      description: Create one item
      operationId: book#createBook
      parameters:
      - name: CreateBookRequestBody
        in: body
        required: true
        schema:
          $ref: '#/definitions/BookCreateBookRequestBody'
          required:
          - name
          - price
      responses:
        "201":
          description: Created response.
          schema:
            $ref: '#/definitions/BookCreateBookResponseBody'
            required:
            - book
            - success
        "401":
          description: Unauthorized response.
          schema:
            $ref: '#/definitions/BookCreateBookUnauthorizedResponseBody'
        "500":
          description: Internal Server Error response.
          schema:
            $ref: '#/definitions/BookCreateBookUnknownErrorResponseBody'
            required:
            - err
            - success
            - error_code
      schemes:
      - https
  /web/book/remove/{id}:
    delete:
      tags:
      - book
      summary: deleteBook book
      description: Delete one item by ID
      operationId: book#deleteBook
      parameters:
      - name: id
        in: path
        required: true
        type: string
        format: uuid
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/BookDeleteBookResponseBody'
            required:
            - success
        "401":
          description: Unauthorized response.
          schema:
            $ref: '#/definitions/BookDeleteBookUnauthorizedResponseBody'
        "500":
          description: Internal Server Error response.
          schema:
            $ref: '#/definitions/BookDeleteBookUnknownErrorResponseBody'
            required:
            - err
            - success
            - error_code
      schemes:
      - https
  /web/books:
    get:
      tags:
      - book
      summary: getAllBooks book
      description: Read All items
      operationId: book#getAllBooks
      responses:
        "200":
          description: OK response.
          schema:
            $ref: '#/definitions/BookGetAllBooksResponseBody'
            required:
            - books
            - success
        "401":
          description: Unauthorized response.
          schema:
            $ref: '#/definitions/BookGetAllBooksUnauthorizedResponseBody'
        "500":
          description: Internal Server Error response.
          schema:
            $ref: '#/definitions/BookGetAllBooksUnknownErrorResponseBody'
            required:
            - err
            - success
            - error_code
      schemes:
      - https
definitions:
  BookCreateBookRequestBody:
    title: BookCreateBookRequestBody
    type: object
    properties:
      name:
        type: string
        example: Guillaume
        minLength: 3
        maxLength: 10
      price:
        type: number
        example: 0.6915773002340172
        format: double
    example:
      name: Guillaume
      price: 0.9258428168763809
    required:
    - name
    - price
  BookCreateBookResponseBody:
    title: BookCreateBookResponseBody
    type: object
    properties:
      book:
        $ref: '#/definitions/BookResponseResponseBody'
      success:
        type: boolean
        example: false
    example:
      book:
        id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
        name: Guillaume
        price: 0.7758777617583704
      success: true
    required:
    - book
    - success
  BookCreateBookUnauthorizedResponseBody:
    title: BookCreateBookUnauthorizedResponseBody
    type: string
    description: Credentials are invalid
    example: Nobis ut quos assumenda.
  BookCreateBookUnknownErrorResponseBody:
    title: BookCreateBookUnknownErrorResponseBody
    type: object
    properties:
      err:
        type: string
        example: Corporis tempora consequatur autem dicta veritatis dolor.
      error_code:
        type: string
        example: Accusantium unde occaecati ipsum quo.
      success:
        type: boolean
        default: false
        example: false
    description: Error not identified (500)
    example:
      err: Quibusdam reprehenderit.
      error_code: Voluptatum rem consequatur dolores veniam.
      success: false
    required:
    - err
    - success
    - error_code
  BookDeleteBookResponseBody:
    title: BookDeleteBookResponseBody
    type: object
    properties:
      success:
        type: boolean
        example: false
    example:
      success: true
    required:
    - success
  BookDeleteBookUnauthorizedResponseBody:
    title: BookDeleteBookUnauthorizedResponseBody
    type: string
    description: Credentials are invalid
    example: Ipsa aut et nam nisi.
  BookDeleteBookUnknownErrorResponseBody:
    title: BookDeleteBookUnknownErrorResponseBody
    type: object
    properties:
      err:
        type: string
        example: Sit autem perferendis eos asperiores libero ea.
      error_code:
        type: string
        example: Totam quisquam optio qui cupiditate.
      success:
        type: boolean
        default: false
        example: false
    description: Error not identified (500)
    example:
      err: Nemo et.
      error_code: Blanditiis quis laudantium laboriosam culpa facilis.
      success: false
    required:
    - err
    - success
    - error_code
  BookGetAllBooksResponseBody:
    title: BookGetAllBooksResponseBody
    type: object
    properties:
      books:
        type: array
        items:
          $ref: '#/definitions/BookResponseResponseBody'
        example:
        - id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
          name: Guillaume
          price: 0.7758777617583704
        - id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
          name: Guillaume
          price: 0.7758777617583704
        - id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
          name: Guillaume
          price: 0.7758777617583704
      success:
        type: boolean
        example: false
    example:
      books:
      - id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
        name: Guillaume
        price: 0.7758777617583704
      - id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
        name: Guillaume
        price: 0.7758777617583704
      - id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
        name: Guillaume
        price: 0.7758777617583704
      - id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
        name: Guillaume
        price: 0.7758777617583704
      success: false
    required:
    - books
    - success
  BookGetAllBooksUnauthorizedResponseBody:
    title: BookGetAllBooksUnauthorizedResponseBody
    type: string
    description: Credentials are invalid
    example: Tempore molestiae quia rerum alias et.
  BookGetAllBooksUnknownErrorResponseBody:
    title: BookGetAllBooksUnknownErrorResponseBody
    type: object
    properties:
      err:
        type: string
        example: Tempore dolorem tenetur.
      error_code:
        type: string
        example: Accusantium consequatur eos repellat.
      success:
        type: boolean
        default: false
        example: true
    description: Error not identified (500)
    example:
      err: Porro repellendus et magnam ut dolorem.
      error_code: Totam consequatur harum optio assumenda doloremque sit.
      success: false
    required:
    - err
    - success
    - error_code
  BookGetBookResponseBody:
    title: BookGetBookResponseBody
    type: object
    properties:
      id:
        type: string
        example: Odit veniam quaerat sint.
      name:
        type: string
        example: Quam autem.
      price:
        type: number
        example: 0.9909542373671817
        format: double
      success:
        type: boolean
        example: false
    example:
      id: Eveniet accusantium et et et est.
      name: Atque harum alias est.
      price: 0.5144703672366026
      success: false
    required:
    - id
    - name
    - price
    - success
  BookGetBookUnauthorizedResponseBody:
    title: BookGetBookUnauthorizedResponseBody
    type: string
    description: Credentials are invalid
    example: Est cumque dolorum fugiat.
  BookGetBookUnknownErrorResponseBody:
    title: BookGetBookUnknownErrorResponseBody
    type: object
    properties:
      err:
        type: string
        example: Est quis voluptate.
      error_code:
        type: string
        example: Et excepturi aut debitis voluptatem quo.
      success:
        type: boolean
        default: false
        example: false
    description: Error not identified (500)
    example:
      err: Eos laborum non consequatur.
      error_code: Voluptas alias.
      success: true
    required:
    - err
    - success
    - error_code
  BookResponseResponseBody:
    title: BookResponseResponseBody
    type: object
    properties:
      id:
        type: string
        example: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
        format: uuid
      name:
        type: string
        example: Guillaume
      price:
        type: number
        example: 0.33004909468851995
        format: double
    example:
      id: 5dfb0bf7-597a-4250-b7ad-63a43ff59c25
      name: Guillaume
      price: 0.15958118596753526
    required:
    - id
    - name
    - price
  BookUpdateBookRequestBody:
    title: BookUpdateBookRequestBody
    type: object
    properties:
      name:
        type: string
        example: Guillaume
      price:
        type: number
        example: 0.4466287596773351
        format: double
    example:
      name: Guillaume
      price: 0.9383176056629422
    required:
    - name
    - price
  BookUpdateBookResponseBody:
    title: BookUpdateBookResponseBody
    type: object
    properties:
      id:
        type: string
        example: Ipsum quis quia aut dolores.
      name:
        type: string
        example: A autem.
      price:
        type: number
        example: 0.6311900575047845
        format: double
      success:
        type: boolean
        example: true
    example:
      id: Corporis ut perspiciatis.
      name: Ipsum neque dolorum molestias voluptatum.
      price: 0.26683697615764523
      success: true
    required:
    - id
    - name
    - price
    - success
  BookUpdateBookUnauthorizedResponseBody:
    title: BookUpdateBookUnauthorizedResponseBody
    type: string
    description: Credentials are invalid
    example: Rerum consectetur corporis consequatur possimus.
  BookUpdateBookUnknownErrorResponseBody:
    title: BookUpdateBookUnknownErrorResponseBody
    type: object
    properties:
      err:
        type: string
        example: Repellendus ut delectus distinctio.
      error_code:
        type: string
        example: Et perferendis voluptate dignissimos aut rerum dolor.
      success:
        type: boolean
        default: false
        example: true
    description: Error not identified (500)
    example:
      err: Quia suscipit.
      error_code: Ad dolores aperiam.
      success: false
    required:
    - err
    - success
    - error_code
  JWTTokenRefreshEmailAlreadyExistResponseBody:
    title: JWTTokenRefreshEmailAlreadyExistResponseBody
    type: object
    properties:
      message:
        type: string
        example: Repellendus omnis.
      success:
        type: boolean
        default: false
        example: true
    description: When email already exist
    example:
      message: Minus minus iure non est harum.
      success: true
    required:
    - message
    - success
  JWTTokenRefreshInvalidScopesResponseBody:
    title: JWTTokenRefreshInvalidScopesResponseBody
    type: string
    description: Token scopes are invalid
    example: Autem itaque rerum est tenetur molestias.
  JWTTokenRefreshRequestBody:
    title: JWTTokenRefreshRequestBody
    type: object
    properties:
      refresh_token:
        type: string
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
    example:
      refresh_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
    required:
    - refresh_token
  JWTTokenRefreshResponseBody:
    title: JWTTokenRefreshResponseBody
    type: object
    properties:
      access_token:
        type: string
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      refresh_token:
        type: string
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      success:
        type: boolean
        example: false
    example:
      access_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      refresh_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      success: true
    required:
    - access_token
    - refresh_token
    - success
  JWTTokenRefreshUnauthorizedResponseBody:
    title: JWTTokenRefreshUnauthorizedResponseBody
    type: string
    description: Identifiers are invalid
    example: Culpa nobis doloribus nulla eos corrupti sit.
  JWTTokenRefreshUnknownErrorResponseBody:
    title: JWTTokenRefreshUnknownErrorResponseBody
    type: object
    properties:
      err:
        type: string
        example: Accusantium id sed consequatur occaecati sed vel.
      error_code:
        type: string
        example: Et dignissimos aliquid.
      success:
        type: boolean
        default: false
        example: true
    description: Error not identified (500)
    example:
      err: Et vero quod omnis ratione est ut.
      error_code: Enim ad excepturi alias id.
      success: true
    required:
    - err
    - success
    - error_code
  JWTTokenSigninEmailAlreadyExistResponseBody:
    title: JWTTokenSigninEmailAlreadyExistResponseBody
    type: object
    properties:
      message:
        type: string
        example: Provident soluta molestiae illum.
      success:
        type: boolean
        default: false
        example: false
    description: When email already exist
    example:
      message: Nulla velit rem enim molestiae.
      success: false
    required:
    - message
    - success
  JWTTokenSigninInvalidScopesResponseBody:
    title: JWTTokenSigninInvalidScopesResponseBody
    type: string
    description: Token scopes are invalid
    example: A minus animi reiciendis dolor excepturi.
  JWTTokenSigninRequestBody:
    title: JWTTokenSigninRequestBody
    type: object
    properties:
      email:
        type: string
        example: guillaume@epitech.eu
        format: email
      password:
        type: string
        example: b4e
        minLength: 8
    example:
      email: guillaume@epitech.eu
      password: ka2
    required:
    - password
    - email
  JWTTokenSigninResponseBody:
    title: JWTTokenSigninResponseBody
    type: object
    properties:
      access_token:
        type: string
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      refresh_token:
        type: string
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      success:
        type: boolean
        example: true
    example:
      access_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      refresh_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      success: false
    required:
    - access_token
    - refresh_token
    - success
  JWTTokenSigninUnauthorizedResponseBody:
    title: JWTTokenSigninUnauthorizedResponseBody
    type: string
    description: Identifiers are invalid
    example: Beatae dolor atque officiis incidunt maxime sequi.
  JWTTokenSigninUnknownErrorResponseBody:
    title: JWTTokenSigninUnknownErrorResponseBody
    type: object
    properties:
      err:
        type: string
        example: Cumque facere blanditiis tempora.
      error_code:
        type: string
        example: Quidem cupiditate excepturi sint.
      success:
        type: boolean
        default: false
        example: false
    description: Error not identified (500)
    example:
      err: Ut nam fugiat dicta.
      error_code: Tempore fuga eos incidunt et fuga illo.
      success: true
    required:
    - err
    - success
    - error_code
  JWTTokenSignupEmailAlreadyExistResponseBody:
    title: JWTTokenSignupEmailAlreadyExistResponseBody
    type: object
    properties:
      message:
        type: string
        example: Quasi sed nihil molestiae.
      success:
        type: boolean
        default: false
        example: true
    description: When email already exist
    example:
      message: Ut sit tempore neque molestiae.
      success: true
    required:
    - message
    - success
  JWTTokenSignupInvalidScopesResponseBody:
    title: JWTTokenSignupInvalidScopesResponseBody
    type: string
    description: Token scopes are invalid
    example: Accusantium repudiandae possimus autem.
  JWTTokenSignupRequestBody:
    title: JWTTokenSignupRequestBody
    type: object
    properties:
      email:
        type: string
        example: guillaume@epitech.eu
        format: email
      firstname:
        type: string
        example: Guillaume
        minLength: 3
        maxLength: 15
      lastname:
        type: string
        example: Morin
        minLength: 3
      password:
        type: string
        example: "452"
        minLength: 8
    description: Use client ID and client secret to oAuth
    example:
      email: guillaume@epitech.eu
      firstname: Guillaume
      lastname: Morin
      password: peu
    required:
    - firstname
    - lastname
    - password
    - email
  JWTTokenSignupResponseBody:
    title: JWTTokenSignupResponseBody
    type: object
    properties:
      access_token:
        type: string
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      refresh_token:
        type: string
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      success:
        type: boolean
        example: false
    example:
      access_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      refresh_token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ
      success: false
    required:
    - access_token
    - refresh_token
    - success
  JWTTokenSignupUnauthorizedResponseBody:
    title: JWTTokenSignupUnauthorizedResponseBody
    type: string
    description: Identifiers are invalid
    example: Vel quod.
  JWTTokenSignupUnknownErrorResponseBody:
    title: JWTTokenSignupUnknownErrorResponseBody
    type: object
    properties:
      err:
        type: string
        example: Aut impedit sequi.
      error_code:
        type: string
        example: Sint dignissimos blanditiis.
      success:
        type: boolean
        default: false
        example: false
    description: Error not identified (500)
    example:
      err: Reprehenderit totam nihil dolorum.
      error_code: Voluptas dolorum dolorem officiis necessitatibus nisi.
      success: true
    required:
    - err
    - success
    - error_code
  OAuthOAuthBadRequestResponseBody:
    title: OAuthOAuthBadRequestResponseBody
    type: object
    properties:
      access_token:
        type: string
        example: In a.
      expires_in:
        type: integer
        example: 1708044702737275696
        format: int64
      success:
        type: boolean
        example: true
      token_type:
        type: string
        example: Quod eos incidunt quibusdam atque.
    example:
      access_token: A quas ut ea aut.
      expires_in: 5657520332482982112
      success: false
      token_type: Et unde quod.
    required:
    - access_token
    - token_type
    - expires_in
    - success
  OAuthOAuthCreatedResponseBody:
    title: OAuthOAuthCreatedResponseBody
    type: object
    properties:
      access_token:
        type: string
        example: Quam natus dolorem nesciunt.
      expires_in:
        type: integer
        example: 1883773498804462422
        format: int64
      success:
        type: boolean
        example: false
      token_type:
        type: string
        example: Et a architecto officiis eum magni.
    example:
      access_token: Et et nihil ut qui et est.
      expires_in: 425567963383894931
      success: false
      token_type: Reiciendis quasi perspiciatis architecto sapiente quasi aspernatur.
    required:
    - access_token
    - token_type
    - expires_in
    - success
  OAuthOAuthInvalidScopesResponseBody:
    title: OAuthOAuthInvalidScopesResponseBody
    type: string
    description: Token scopes are invalid
    example: Sunt odit aliquam quia.
  OAuthOAuthRequestBody:
    title: OAuthOAuthRequestBody
    type: object
    properties:
      client_id:
        type: string
        example: Voluptatem eius iusto dignissimos.
      client_secret:
        type: string
        example: Quam molestias possimus sunt.
      grant_type:
        type: string
        example: Nihil tenetur.
    example:
      client_id: Tenetur eius nihil officiis accusamus provident.
      client_secret: Rerum sapiente commodi odit repellat.
      grant_type: Ut iure ut aut adipisci consequatur velit.
    required:
    - client_id
    - client_secret
    - grant_type
  OAuthOAuthUnauthorizedResponseBody:
    title: OAuthOAuthUnauthorizedResponseBody
    type: string
    description: Identifiers are invalid
    example: Eum et nam voluptas maxime facilis.
  OAuthOAuthUnknownErrorResponseBody:
    title: OAuthOAuthUnknownErrorResponseBody
    type: object
    properties:
      err:
        type: string
        example: Nihil dignissimos est.
      error_code:
        type: string
        example: Quia optio et vel ut.
      success:
        type: boolean
        default: false
        example: true
    description: Error not identified (500)
    example:
      err: Cumque totam.
      error_code: Cumque minus qui doloribus omnis nam.
      success: false
    required:
    - err
    - success
    - error_code
securityDefinitions:
  OAuth2_query_oauth:
    type: oauth2
    description: Use OAuth2 to authenticate
    flow: application
    tokenUrl: /authorization
    scopes:
      api:read: Provides read access
