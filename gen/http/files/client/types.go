// Code generated by goa v3.5.2, DO NOT EDIT.
//
// files HTTP client types
//
// Command:
// $ goa gen api_crud/design

package client

import (
	files "api_crud/gen/files"

	goa "goa.design/goa/v3/pkg"
)

// ImportFileRequestBody is the type of the "files" service "importFile"
// endpoint HTTP request body.
type ImportFileRequestBody struct {
	// uploaded file name
	Filename string `form:"filename" json:"filename" xml:"filename"`
	// url file
	URL *string `form:"url,omitempty" json:"url,omitempty" xml:"url,omitempty"`
	// url file
	Mime *string `form:"mime,omitempty" json:"mime,omitempty" xml:"mime,omitempty"`
	// content of image
	Content []byte `form:"content" json:"content" xml:"content"`
	// size of image
	Size *int64 `form:"size,omitempty" json:"size,omitempty" xml:"size,omitempty"`
	// uploaded file format
	Format string `form:"format" json:"format" xml:"format"`
}

// ImportFileResponseBody is the type of the "files" service "importFile"
// endpoint HTTP response body.
type ImportFileResponseBody struct {
	File    *ResFileResponseBody `form:"file,omitempty" json:"file,omitempty" xml:"file,omitempty"`
	Success *bool                `form:"success,omitempty" json:"success,omitempty" xml:"success,omitempty"`
}

// DeleteFileResponseBody is the type of the "files" service "deleteFile"
// endpoint HTTP response body.
type DeleteFileResponseBody struct {
	Success *bool `form:"success,omitempty" json:"success,omitempty" xml:"success,omitempty"`
}

// ImportFileUnknownErrorResponseBody is the type of the "files" service
// "importFile" endpoint HTTP response body for the "unknown_error" error.
type ImportFileUnknownErrorResponseBody struct {
	Err       *string `form:"err,omitempty" json:"err,omitempty" xml:"err,omitempty"`
	ErrorCode *string `form:"error_code,omitempty" json:"error_code,omitempty" xml:"error_code,omitempty"`
	Success   *bool   `form:"success,omitempty" json:"success,omitempty" xml:"success,omitempty"`
}

// DeleteFileUnknownErrorResponseBody is the type of the "files" service
// "deleteFile" endpoint HTTP response body for the "unknown_error" error.
type DeleteFileUnknownErrorResponseBody struct {
	Err       *string `form:"err,omitempty" json:"err,omitempty" xml:"err,omitempty"`
	ErrorCode *string `form:"error_code,omitempty" json:"error_code,omitempty" xml:"error_code,omitempty"`
	Success   *bool   `form:"success,omitempty" json:"success,omitempty" xml:"success,omitempty"`
}

// ResFileResponseBody is used to define fields on response body types.
type ResFileResponseBody struct {
	ID   *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
	Name *string `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	URL  *string `form:"url,omitempty" json:"url,omitempty" xml:"url,omitempty"`
	Mime *string `form:"mime,omitempty" json:"mime,omitempty" xml:"mime,omitempty"`
	Size *int64  `form:"size,omitempty" json:"size,omitempty" xml:"size,omitempty"`
}

// NewImportFileRequestBody builds the HTTP request body from the payload of
// the "importFile" endpoint of the "files" service.
func NewImportFileRequestBody(p *files.ImportFilePayload) *ImportFileRequestBody {
	body := &ImportFileRequestBody{
		Filename: p.Filename,
		URL:      p.URL,
		Mime:     p.Mime,
		Content:  p.Content,
		Size:     p.Size,
		Format:   p.Format,
	}
	return body
}

// NewImportFileResultCreated builds a "files" service "importFile" endpoint
// result from a HTTP "Created" response.
func NewImportFileResultCreated(body *ImportFileResponseBody) *files.ImportFileResult {
	v := &files.ImportFileResult{
		Success: *body.Success,
	}
	v.File = unmarshalResFileResponseBodyToFilesResFile(body.File)

	return v
}

// NewImportFileUnknownError builds a files service importFile endpoint
// unknown_error error.
func NewImportFileUnknownError(body *ImportFileUnknownErrorResponseBody) *files.UnknownError {
	v := &files.UnknownError{
		Err:       *body.Err,
		ErrorCode: *body.ErrorCode,
		Success:   *body.Success,
	}

	return v
}

// NewDeleteFileResultOK builds a "files" service "deleteFile" endpoint result
// from a HTTP "OK" response.
func NewDeleteFileResultOK(body *DeleteFileResponseBody) *files.DeleteFileResult {
	v := &files.DeleteFileResult{
		Success: *body.Success,
	}

	return v
}

// NewDeleteFileUnknownError builds a files service deleteFile endpoint
// unknown_error error.
func NewDeleteFileUnknownError(body *DeleteFileUnknownErrorResponseBody) *files.UnknownError {
	v := &files.UnknownError{
		Err:       *body.Err,
		ErrorCode: *body.ErrorCode,
		Success:   *body.Success,
	}

	return v
}

// ValidateImportFileResponseBody runs the validations defined on
// ImportFileResponseBody
func ValidateImportFileResponseBody(body *ImportFileResponseBody) (err error) {
	if body.Success == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("success", "body"))
	}
	if body.File == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("file", "body"))
	}
	if body.File != nil {
		if err2 := ValidateResFileResponseBody(body.File); err2 != nil {
			err = goa.MergeErrors(err, err2)
		}
	}
	return
}

// ValidateDeleteFileResponseBody runs the validations defined on
// DeleteFileResponseBody
func ValidateDeleteFileResponseBody(body *DeleteFileResponseBody) (err error) {
	if body.Success == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("success", "body"))
	}
	return
}

// ValidateImportFileUnknownErrorResponseBody runs the validations defined on
// importFile_unknown_error_response_body
func ValidateImportFileUnknownErrorResponseBody(body *ImportFileUnknownErrorResponseBody) (err error) {
	if body.Err == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("err", "body"))
	}
	if body.Success == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("success", "body"))
	}
	if body.ErrorCode == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("error_code", "body"))
	}
	return
}

// ValidateDeleteFileUnknownErrorResponseBody runs the validations defined on
// deleteFile_unknown_error_response_body
func ValidateDeleteFileUnknownErrorResponseBody(body *DeleteFileUnknownErrorResponseBody) (err error) {
	if body.Err == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("err", "body"))
	}
	if body.Success == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("success", "body"))
	}
	if body.ErrorCode == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("error_code", "body"))
	}
	return
}

// ValidateResFileResponseBody runs the validations defined on
// resFileResponseBody
func ValidateResFileResponseBody(body *ResFileResponseBody) (err error) {
	if body.ID == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("id", "body"))
	}
	if body.Name == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("name", "body"))
	}
	if body.URL == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("url", "body"))
	}
	if body.ID != nil {
		err = goa.MergeErrors(err, goa.ValidateFormat("body.id", *body.ID, goa.FormatUUID))
	}
	return
}
