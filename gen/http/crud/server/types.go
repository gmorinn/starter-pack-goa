// Code generated by goa v3.5.2, DO NOT EDIT.
//
// crud HTTP server types
//
// Command:
// $ goa gen api_crud/design

package server

import (
	crud "api_crud/gen/crud"
)

// CreateBookRequestBody is the type of the "crud" service "createBook"
// endpoint HTTP request body.
type CreateBookRequestBody struct {
	Name  *string  `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	Price *float64 `form:"price,omitempty" json:"price,omitempty" xml:"price,omitempty"`
}

// GetBookResponseBody is the type of the "crud" service "getBook" endpoint
// HTTP response body.
type GetBookResponseBody struct {
	ID    *string  `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
	Name  *string  `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	Price *float64 `form:"price,omitempty" json:"price,omitempty" xml:"price,omitempty"`
}

// GetAllBooksResponseBody is the type of the "crud" service "getAllBooks"
// endpoint HTTP response body.
type GetAllBooksResponseBody []*BookResponseResponse

// CreateBookResponseBody is the type of the "crud" service "createBook"
// endpoint HTTP response body.
type CreateBookResponseBody struct {
	ID    *string  `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
	Name  *string  `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	Price *float64 `form:"price,omitempty" json:"price,omitempty" xml:"price,omitempty"`
}

// GetBookCannotConvertStringToUUIDResponseBody is the type of the "crud"
// service "getBook" endpoint HTTP response body for the
// "cannot_convert_string_to_uuid" error.
type GetBookCannotConvertStringToUUIDResponseBody struct {
	// Returning error
	Message string `form:"message" json:"message" xml:"message"`
	// Wrong Id
	ID string `form:"id" json:"id" xml:"id"`
}

// GetBookIDDoesntExistResponseBody is the type of the "crud" service "getBook"
// endpoint HTTP response body for the "id_doesnt_exist" error.
type GetBookIDDoesntExistResponseBody struct {
	// Returning error
	Message string `form:"message" json:"message" xml:"message"`
	// Wrong Id
	ID string `form:"id" json:"id" xml:"id"`
}

// BookResponseResponse is used to define fields on response body types.
type BookResponseResponse struct {
	ID    *string  `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
	Name  *string  `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	Price *float64 `form:"price,omitempty" json:"price,omitempty" xml:"price,omitempty"`
}

// NewGetBookResponseBody builds the HTTP response body from the result of the
// "getBook" endpoint of the "crud" service.
func NewGetBookResponseBody(res *crud.BookResponse) *GetBookResponseBody {
	body := &GetBookResponseBody{
		ID:    res.ID,
		Name:  res.Name,
		Price: res.Price,
	}
	return body
}

// NewGetAllBooksResponseBody builds the HTTP response body from the result of
// the "getAllBooks" endpoint of the "crud" service.
func NewGetAllBooksResponseBody(res []*crud.BookResponse) GetAllBooksResponseBody {
	body := make([]*BookResponseResponse, len(res))
	for i, val := range res {
		body[i] = marshalCrudBookResponseToBookResponseResponse(val)
	}
	return body
}

// NewCreateBookResponseBody builds the HTTP response body from the result of
// the "createBook" endpoint of the "crud" service.
func NewCreateBookResponseBody(res *crud.BookResponse) *CreateBookResponseBody {
	body := &CreateBookResponseBody{
		ID:    res.ID,
		Name:  res.Name,
		Price: res.Price,
	}
	return body
}

// NewGetBookCannotConvertStringToUUIDResponseBody builds the HTTP response
// body from the result of the "getBook" endpoint of the "crud" service.
func NewGetBookCannotConvertStringToUUIDResponseBody(res *crud.CannotConvertStringToUUID) *GetBookCannotConvertStringToUUIDResponseBody {
	body := &GetBookCannotConvertStringToUUIDResponseBody{
		Message: res.Message,
		ID:      res.ID,
	}
	return body
}

// NewGetBookIDDoesntExistResponseBody builds the HTTP response body from the
// result of the "getBook" endpoint of the "crud" service.
func NewGetBookIDDoesntExistResponseBody(res *crud.IDDoesntExist) *GetBookIDDoesntExistResponseBody {
	body := &GetBookIDDoesntExistResponseBody{
		Message: res.Message,
		ID:      res.ID,
	}
	return body
}

// NewGetBookPayload builds a crud service getBook endpoint payload.
func NewGetBookPayload(id string) *crud.GetBookPayload {
	v := &crud.GetBookPayload{}
	v.ID = id

	return v
}

// NewCreateBookPayload builds a crud service createBook endpoint payload.
func NewCreateBookPayload(body *CreateBookRequestBody) *crud.CreateBookPayload {
	v := &crud.CreateBookPayload{
		Name:  body.Name,
		Price: body.Price,
	}

	return v
}
