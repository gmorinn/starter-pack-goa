// Code generated by goa v3.5.2, DO NOT EDIT.
//
// crud HTTP client CLI support package
//
// Command:
// $ goa gen api_crud/design

package client

import (
	crud "api_crud/gen/crud"
	"encoding/json"
	"fmt"
)

// BuildGetBookPayload builds the payload for the crud getBook endpoint from
// CLI flags.
func BuildGetBookPayload(crudGetBookID string) (*crud.GetBookPayload, error) {
	var id string
	{
		id = crudGetBookID
	}
	v := &crud.GetBookPayload{}
	v.ID = id

	return v, nil
}

// BuildCreateBookPayload builds the payload for the crud createBook endpoint
// from CLI flags.
func BuildCreateBookPayload(crudCreateBookBody string) (*crud.CreateBookPayload, error) {
	var err error
	var body CreateBookRequestBody
	{
		err = json.Unmarshal([]byte(crudCreateBookBody), &body)
		if err != nil {
			return nil, fmt.Errorf("invalid JSON for body, \nerror: %s, \nexample of valid JSON:\n%s", err, "'{\n      \"name\": \"Est culpa eos nulla.\",\n      \"price\": 0.03987079186880613\n   }'")
		}
	}
	v := &crud.CreateBookPayload{
		Name:  body.Name,
		Price: body.Price,
	}

	return v, nil
}
