// Code generated by goa v3.5.2, DO NOT EDIT.
//
// book HTTP client types
//
// Command:
// $ goa gen api_crud/design

package client

import (
	book "api_crud/gen/book"

	goa "goa.design/goa/v3/pkg"
)

// UpdateBookRequestBody is the type of the "book" service "updateBook"
// endpoint HTTP request body.
type UpdateBookRequestBody struct {
	Name  string  `form:"name" json:"name" xml:"name"`
	Price float64 `form:"price" json:"price" xml:"price"`
}

// CreateBookRequestBody is the type of the "book" service "createBook"
// endpoint HTTP request body.
type CreateBookRequestBody struct {
	// Name of the book
	Name string `form:"name" json:"name" xml:"name"`
	// Price of the book
	Price float64 `form:"price" json:"price" xml:"price"`
}

// GetBookResponseBody is the type of the "book" service "getBook" endpoint
// HTTP response body.
type GetBookResponseBody struct {
	ID      *string  `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
	Name    *string  `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	Price   *float64 `form:"price,omitempty" json:"price,omitempty" xml:"price,omitempty"`
	Success *bool    `form:"success,omitempty" json:"success,omitempty" xml:"success,omitempty"`
}

// UpdateBookResponseBody is the type of the "book" service "updateBook"
// endpoint HTTP response body.
type UpdateBookResponseBody struct {
	// Result is an Object
	Book    *BookResponseResponseBody `form:"book,omitempty" json:"book,omitempty" xml:"book,omitempty"`
	Success *bool                     `form:"success,omitempty" json:"success,omitempty" xml:"success,omitempty"`
}

// GetAllBooksResponseBody is the type of the "book" service "getAllBooks"
// endpoint HTTP response body.
type GetAllBooksResponseBody struct {
	// Result is an array of object
	Books   []*BookResponseResponseBody `form:"books,omitempty" json:"books,omitempty" xml:"books,omitempty"`
	Success *bool                       `form:"success,omitempty" json:"success,omitempty" xml:"success,omitempty"`
}

// DeleteBookResponseBody is the type of the "book" service "deleteBook"
// endpoint HTTP response body.
type DeleteBookResponseBody struct {
	Success *bool `form:"success,omitempty" json:"success,omitempty" xml:"success,omitempty"`
}

// CreateBookResponseBody is the type of the "book" service "createBook"
// endpoint HTTP response body.
type CreateBookResponseBody struct {
	// Result is an object
	Book    *BookResponseResponseBody `form:"book,omitempty" json:"book,omitempty" xml:"book,omitempty"`
	Success *bool                     `form:"success,omitempty" json:"success,omitempty" xml:"success,omitempty"`
}

// GetBookUnknownErrorResponseBody is the type of the "book" service "getBook"
// endpoint HTTP response body for the "unknown_error" error.
type GetBookUnknownErrorResponseBody struct {
	Err       *string `form:"err,omitempty" json:"err,omitempty" xml:"err,omitempty"`
	ErrorCode *string `form:"error_code,omitempty" json:"error_code,omitempty" xml:"error_code,omitempty"`
	Success   *bool   `form:"success,omitempty" json:"success,omitempty" xml:"success,omitempty"`
}

// GetBookUnauthorizedResponseBody is the type of the "book" service "getBook"
// endpoint HTTP response body for the "unauthorized" error.
type GetBookUnauthorizedResponseBody string

// UpdateBookUnknownErrorResponseBody is the type of the "book" service
// "updateBook" endpoint HTTP response body for the "unknown_error" error.
type UpdateBookUnknownErrorResponseBody struct {
	Err       *string `form:"err,omitempty" json:"err,omitempty" xml:"err,omitempty"`
	ErrorCode *string `form:"error_code,omitempty" json:"error_code,omitempty" xml:"error_code,omitempty"`
	Success   *bool   `form:"success,omitempty" json:"success,omitempty" xml:"success,omitempty"`
}

// UpdateBookUnauthorizedResponseBody is the type of the "book" service
// "updateBook" endpoint HTTP response body for the "unauthorized" error.
type UpdateBookUnauthorizedResponseBody string

// GetAllBooksUnknownErrorResponseBody is the type of the "book" service
// "getAllBooks" endpoint HTTP response body for the "unknown_error" error.
type GetAllBooksUnknownErrorResponseBody struct {
	Err       *string `form:"err,omitempty" json:"err,omitempty" xml:"err,omitempty"`
	ErrorCode *string `form:"error_code,omitempty" json:"error_code,omitempty" xml:"error_code,omitempty"`
	Success   *bool   `form:"success,omitempty" json:"success,omitempty" xml:"success,omitempty"`
}

// GetAllBooksUnauthorizedResponseBody is the type of the "book" service
// "getAllBooks" endpoint HTTP response body for the "unauthorized" error.
type GetAllBooksUnauthorizedResponseBody string

// DeleteBookUnknownErrorResponseBody is the type of the "book" service
// "deleteBook" endpoint HTTP response body for the "unknown_error" error.
type DeleteBookUnknownErrorResponseBody struct {
	Err       *string `form:"err,omitempty" json:"err,omitempty" xml:"err,omitempty"`
	ErrorCode *string `form:"error_code,omitempty" json:"error_code,omitempty" xml:"error_code,omitempty"`
	Success   *bool   `form:"success,omitempty" json:"success,omitempty" xml:"success,omitempty"`
}

// DeleteBookUnauthorizedResponseBody is the type of the "book" service
// "deleteBook" endpoint HTTP response body for the "unauthorized" error.
type DeleteBookUnauthorizedResponseBody string

// CreateBookUnknownErrorResponseBody is the type of the "book" service
// "createBook" endpoint HTTP response body for the "unknown_error" error.
type CreateBookUnknownErrorResponseBody struct {
	Err       *string `form:"err,omitempty" json:"err,omitempty" xml:"err,omitempty"`
	ErrorCode *string `form:"error_code,omitempty" json:"error_code,omitempty" xml:"error_code,omitempty"`
	Success   *bool   `form:"success,omitempty" json:"success,omitempty" xml:"success,omitempty"`
}

// CreateBookUnauthorizedResponseBody is the type of the "book" service
// "createBook" endpoint HTTP response body for the "unauthorized" error.
type CreateBookUnauthorizedResponseBody string

// BookResponseResponseBody is used to define fields on response body types.
type BookResponseResponseBody struct {
	ID    *string  `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
	Name  *string  `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	Price *float64 `form:"price,omitempty" json:"price,omitempty" xml:"price,omitempty"`
}

// NewUpdateBookRequestBody builds the HTTP request body from the payload of
// the "updateBook" endpoint of the "book" service.
func NewUpdateBookRequestBody(p *book.UpdateBookPayload) *UpdateBookRequestBody {
	body := &UpdateBookRequestBody{
		Name:  p.Name,
		Price: p.Price,
	}
	return body
}

// NewCreateBookRequestBody builds the HTTP request body from the payload of
// the "createBook" endpoint of the "book" service.
func NewCreateBookRequestBody(p *book.CreateBookPayload) *CreateBookRequestBody {
	body := &CreateBookRequestBody{
		Name:  p.Name,
		Price: p.Price,
	}
	return body
}

// NewGetBookResultOK builds a "book" service "getBook" endpoint result from a
// HTTP "OK" response.
func NewGetBookResultOK(body *GetBookResponseBody) *book.GetBookResult {
	v := &book.GetBookResult{
		ID:      *body.ID,
		Name:    *body.Name,
		Price:   *body.Price,
		Success: *body.Success,
	}

	return v
}

// NewGetBookUnknownError builds a book service getBook endpoint unknown_error
// error.
func NewGetBookUnknownError(body *GetBookUnknownErrorResponseBody) *book.UnknownError {
	v := &book.UnknownError{
		Err:       *body.Err,
		ErrorCode: *body.ErrorCode,
		Success:   *body.Success,
	}

	return v
}

// NewGetBookUnauthorized builds a book service getBook endpoint unauthorized
// error.
func NewGetBookUnauthorized(body GetBookUnauthorizedResponseBody) book.Unauthorized {
	v := book.Unauthorized(body)

	return v
}

// NewUpdateBookResultOK builds a "book" service "updateBook" endpoint result
// from a HTTP "OK" response.
func NewUpdateBookResultOK(body *UpdateBookResponseBody) *book.UpdateBookResult {
	v := &book.UpdateBookResult{
		Success: *body.Success,
	}
	v.Book = unmarshalBookResponseResponseBodyToBookBookResponse(body.Book)

	return v
}

// NewUpdateBookUnknownError builds a book service updateBook endpoint
// unknown_error error.
func NewUpdateBookUnknownError(body *UpdateBookUnknownErrorResponseBody) *book.UnknownError {
	v := &book.UnknownError{
		Err:       *body.Err,
		ErrorCode: *body.ErrorCode,
		Success:   *body.Success,
	}

	return v
}

// NewUpdateBookUnauthorized builds a book service updateBook endpoint
// unauthorized error.
func NewUpdateBookUnauthorized(body UpdateBookUnauthorizedResponseBody) book.Unauthorized {
	v := book.Unauthorized(body)

	return v
}

// NewGetAllBooksResultOK builds a "book" service "getAllBooks" endpoint result
// from a HTTP "OK" response.
func NewGetAllBooksResultOK(body *GetAllBooksResponseBody) *book.GetAllBooksResult {
	v := &book.GetAllBooksResult{
		Success: *body.Success,
	}
	v.Books = make([]*book.BookResponse, len(body.Books))
	for i, val := range body.Books {
		v.Books[i] = unmarshalBookResponseResponseBodyToBookBookResponse(val)
	}

	return v
}

// NewGetAllBooksUnknownError builds a book service getAllBooks endpoint
// unknown_error error.
func NewGetAllBooksUnknownError(body *GetAllBooksUnknownErrorResponseBody) *book.UnknownError {
	v := &book.UnknownError{
		Err:       *body.Err,
		ErrorCode: *body.ErrorCode,
		Success:   *body.Success,
	}

	return v
}

// NewGetAllBooksUnauthorized builds a book service getAllBooks endpoint
// unauthorized error.
func NewGetAllBooksUnauthorized(body GetAllBooksUnauthorizedResponseBody) book.Unauthorized {
	v := book.Unauthorized(body)

	return v
}

// NewDeleteBookResultOK builds a "book" service "deleteBook" endpoint result
// from a HTTP "OK" response.
func NewDeleteBookResultOK(body *DeleteBookResponseBody) *book.DeleteBookResult {
	v := &book.DeleteBookResult{
		Success: *body.Success,
	}

	return v
}

// NewDeleteBookUnknownError builds a book service deleteBook endpoint
// unknown_error error.
func NewDeleteBookUnknownError(body *DeleteBookUnknownErrorResponseBody) *book.UnknownError {
	v := &book.UnknownError{
		Err:       *body.Err,
		ErrorCode: *body.ErrorCode,
		Success:   *body.Success,
	}

	return v
}

// NewDeleteBookUnauthorized builds a book service deleteBook endpoint
// unauthorized error.
func NewDeleteBookUnauthorized(body DeleteBookUnauthorizedResponseBody) book.Unauthorized {
	v := book.Unauthorized(body)

	return v
}

// NewCreateBookResultCreated builds a "book" service "createBook" endpoint
// result from a HTTP "Created" response.
func NewCreateBookResultCreated(body *CreateBookResponseBody) *book.CreateBookResult {
	v := &book.CreateBookResult{
		Success: *body.Success,
	}
	v.Book = unmarshalBookResponseResponseBodyToBookBookResponse(body.Book)

	return v
}

// NewCreateBookUnknownError builds a book service createBook endpoint
// unknown_error error.
func NewCreateBookUnknownError(body *CreateBookUnknownErrorResponseBody) *book.UnknownError {
	v := &book.UnknownError{
		Err:       *body.Err,
		ErrorCode: *body.ErrorCode,
		Success:   *body.Success,
	}

	return v
}

// NewCreateBookUnauthorized builds a book service createBook endpoint
// unauthorized error.
func NewCreateBookUnauthorized(body CreateBookUnauthorizedResponseBody) book.Unauthorized {
	v := book.Unauthorized(body)

	return v
}

// ValidateGetBookResponseBody runs the validations defined on
// GetBookResponseBody
func ValidateGetBookResponseBody(body *GetBookResponseBody) (err error) {
	if body.ID == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("id", "body"))
	}
	if body.Name == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("name", "body"))
	}
	if body.Price == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("price", "body"))
	}
	if body.Success == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("success", "body"))
	}
	return
}

// ValidateUpdateBookResponseBody runs the validations defined on
// UpdateBookResponseBody
func ValidateUpdateBookResponseBody(body *UpdateBookResponseBody) (err error) {
	if body.Book == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("book", "body"))
	}
	if body.Success == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("success", "body"))
	}
	if body.Book != nil {
		if err2 := ValidateBookResponseResponseBody(body.Book); err2 != nil {
			err = goa.MergeErrors(err, err2)
		}
	}
	return
}

// ValidateGetAllBooksResponseBody runs the validations defined on
// GetAllBooksResponseBody
func ValidateGetAllBooksResponseBody(body *GetAllBooksResponseBody) (err error) {
	if body.Books == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("books", "body"))
	}
	if body.Success == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("success", "body"))
	}
	for _, e := range body.Books {
		if e != nil {
			if err2 := ValidateBookResponseResponseBody(e); err2 != nil {
				err = goa.MergeErrors(err, err2)
			}
		}
	}
	return
}

// ValidateDeleteBookResponseBody runs the validations defined on
// DeleteBookResponseBody
func ValidateDeleteBookResponseBody(body *DeleteBookResponseBody) (err error) {
	if body.Success == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("success", "body"))
	}
	return
}

// ValidateCreateBookResponseBody runs the validations defined on
// CreateBookResponseBody
func ValidateCreateBookResponseBody(body *CreateBookResponseBody) (err error) {
	if body.Book == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("book", "body"))
	}
	if body.Success == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("success", "body"))
	}
	if body.Book != nil {
		if err2 := ValidateBookResponseResponseBody(body.Book); err2 != nil {
			err = goa.MergeErrors(err, err2)
		}
	}
	return
}

// ValidateGetBookUnknownErrorResponseBody runs the validations defined on
// getBook_unknown_error_response_body
func ValidateGetBookUnknownErrorResponseBody(body *GetBookUnknownErrorResponseBody) (err error) {
	if body.Err == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("err", "body"))
	}
	if body.Success == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("success", "body"))
	}
	if body.ErrorCode == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("error_code", "body"))
	}
	return
}

// ValidateUpdateBookUnknownErrorResponseBody runs the validations defined on
// updateBook_unknown_error_response_body
func ValidateUpdateBookUnknownErrorResponseBody(body *UpdateBookUnknownErrorResponseBody) (err error) {
	if body.Err == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("err", "body"))
	}
	if body.Success == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("success", "body"))
	}
	if body.ErrorCode == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("error_code", "body"))
	}
	return
}

// ValidateGetAllBooksUnknownErrorResponseBody runs the validations defined on
// getAllBooks_unknown_error_response_body
func ValidateGetAllBooksUnknownErrorResponseBody(body *GetAllBooksUnknownErrorResponseBody) (err error) {
	if body.Err == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("err", "body"))
	}
	if body.Success == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("success", "body"))
	}
	if body.ErrorCode == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("error_code", "body"))
	}
	return
}

// ValidateDeleteBookUnknownErrorResponseBody runs the validations defined on
// deleteBook_unknown_error_response_body
func ValidateDeleteBookUnknownErrorResponseBody(body *DeleteBookUnknownErrorResponseBody) (err error) {
	if body.Err == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("err", "body"))
	}
	if body.Success == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("success", "body"))
	}
	if body.ErrorCode == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("error_code", "body"))
	}
	return
}

// ValidateCreateBookUnknownErrorResponseBody runs the validations defined on
// createBook_unknown_error_response_body
func ValidateCreateBookUnknownErrorResponseBody(body *CreateBookUnknownErrorResponseBody) (err error) {
	if body.Err == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("err", "body"))
	}
	if body.Success == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("success", "body"))
	}
	if body.ErrorCode == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("error_code", "body"))
	}
	return
}

// ValidateBookResponseResponseBody runs the validations defined on
// BookResponseResponseBody
func ValidateBookResponseResponseBody(body *BookResponseResponseBody) (err error) {
	if body.ID == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("id", "body"))
	}
	if body.Name == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("name", "body"))
	}
	if body.Price == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("price", "body"))
	}
	if body.ID != nil {
		err = goa.MergeErrors(err, goa.ValidateFormat("body.id", *body.ID, goa.FormatUUID))
	}
	return
}
