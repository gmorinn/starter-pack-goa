// Code generated by goa v3.5.2, DO NOT EDIT.
//
// users HTTP client types
//
// Command:
// $ goa gen api_crud/design

package client

import (
	users "api_crud/gen/users"

	goa "goa.design/goa/v3/pkg"
)

// GetUserResponseBody is the type of the "users" service "getUser" endpoint
// HTTP response body.
type GetUserResponseBody struct {
	// Result is an object
	User    *ResUserResponseBody `form:"user,omitempty" json:"user,omitempty" xml:"user,omitempty"`
	Success *bool                `form:"success,omitempty" json:"success,omitempty" xml:"success,omitempty"`
}

// GetUserUnknownErrorResponseBody is the type of the "users" service "getUser"
// endpoint HTTP response body for the "unknown_error" error.
type GetUserUnknownErrorResponseBody struct {
	Err       *string `form:"err,omitempty" json:"err,omitempty" xml:"err,omitempty"`
	ErrorCode *string `form:"error_code,omitempty" json:"error_code,omitempty" xml:"error_code,omitempty"`
	Success   *bool   `form:"success,omitempty" json:"success,omitempty" xml:"success,omitempty"`
}

// ResUserResponseBody is used to define fields on response body types.
type ResUserResponseBody struct {
	ID        *string `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
	Firstname *string `form:"firstname,omitempty" json:"firstname,omitempty" xml:"firstname,omitempty"`
	Lastname  *string `form:"lastname,omitempty" json:"lastname,omitempty" xml:"lastname,omitempty"`
	Email     *string `form:"email,omitempty" json:"email,omitempty" xml:"email,omitempty"`
	Birthday  *string `form:"birthday,omitempty" json:"birthday,omitempty" xml:"birthday,omitempty"`
	Phone     *string `form:"phone,omitempty" json:"phone,omitempty" xml:"phone,omitempty"`
}

// NewGetUserResultOK builds a "users" service "getUser" endpoint result from a
// HTTP "OK" response.
func NewGetUserResultOK(body *GetUserResponseBody) *users.GetUserResult {
	v := &users.GetUserResult{
		Success: *body.Success,
	}
	v.User = unmarshalResUserResponseBodyToUsersResUser(body.User)

	return v
}

// NewGetUserUnknownError builds a users service getUser endpoint unknown_error
// error.
func NewGetUserUnknownError(body *GetUserUnknownErrorResponseBody) *users.UnknownError {
	v := &users.UnknownError{
		Err:       *body.Err,
		ErrorCode: *body.ErrorCode,
		Success:   *body.Success,
	}

	return v
}

// ValidateGetUserResponseBody runs the validations defined on
// GetUserResponseBody
func ValidateGetUserResponseBody(body *GetUserResponseBody) (err error) {
	if body.User == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("user", "body"))
	}
	if body.Success == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("success", "body"))
	}
	if body.User != nil {
		if err2 := ValidateResUserResponseBody(body.User); err2 != nil {
			err = goa.MergeErrors(err, err2)
		}
	}
	return
}

// ValidateGetUserUnknownErrorResponseBody runs the validations defined on
// getUser_unknown_error_response_body
func ValidateGetUserUnknownErrorResponseBody(body *GetUserUnknownErrorResponseBody) (err error) {
	if body.Err == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("err", "body"))
	}
	if body.Success == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("success", "body"))
	}
	if body.ErrorCode == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("error_code", "body"))
	}
	return
}

// ValidateResUserResponseBody runs the validations defined on
// resUserResponseBody
func ValidateResUserResponseBody(body *ResUserResponseBody) (err error) {
	if body.ID == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("id", "body"))
	}
	if body.Email == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("email", "body"))
	}
	if body.ID != nil {
		err = goa.MergeErrors(err, goa.ValidateFormat("body.id", *body.ID, goa.FormatUUID))
	}
	if body.Email != nil {
		err = goa.MergeErrors(err, goa.ValidateFormat("body.email", *body.Email, goa.FormatEmail))
	}
	return
}
