// Code generated by goa v3.10.2, DO NOT EDIT.
//
// oAuth HTTP server types
//
// Command:
// $ goa gen starter-pack-goa/design

package server

import (
	oauth "starter-pack-goa/gen/o_auth"

	goa "goa.design/goa/v3/pkg"
)

// OAuthRequestBody is the type of the "oAuth" service "oAuth" endpoint HTTP
// request body.
type OAuthRequestBody struct {
	ClientID     *string `form:"client_id,omitempty" json:"client_id,omitempty" xml:"client_id,omitempty"`
	ClientSecret *string `form:"client_secret,omitempty" json:"client_secret,omitempty" xml:"client_secret,omitempty"`
	GrantType    *string `form:"grant_type,omitempty" json:"grant_type,omitempty" xml:"grant_type,omitempty"`
}

// OAuthCreatedResponseBody is the type of the "oAuth" service "oAuth" endpoint
// HTTP response body.
type OAuthCreatedResponseBody struct {
	AccessToken string `form:"access_token" json:"access_token" xml:"access_token"`
	TokenType   string `form:"token_type" json:"token_type" xml:"token_type"`
	ExpiresIn   int64  `form:"expires_in" json:"expires_in" xml:"expires_in"`
	Success     bool   `form:"success" json:"success" xml:"success"`
}

// OAuthUnknownErrorResponseBody is the type of the "oAuth" service "oAuth"
// endpoint HTTP response body for the "unknown_error" error.
type OAuthUnknownErrorResponseBody struct {
	Err       string `form:"err" json:"err" xml:"err"`
	ErrorCode string `form:"error_code" json:"error_code" xml:"error_code"`
	Success   bool   `form:"success" json:"success" xml:"success"`
}

// NewOAuthCreatedResponseBody builds the HTTP response body from the result of
// the "oAuth" endpoint of the "oAuth" service.
func NewOAuthCreatedResponseBody(res *oauth.OAuthResponse) *OAuthCreatedResponseBody {
	body := &OAuthCreatedResponseBody{
		AccessToken: res.AccessToken,
		TokenType:   res.TokenType,
		ExpiresIn:   res.ExpiresIn,
		Success:     res.Success,
	}
	return body
}

// NewOAuthUnknownErrorResponseBody builds the HTTP response body from the
// result of the "oAuth" endpoint of the "oAuth" service.
func NewOAuthUnknownErrorResponseBody(res *oauth.UnknownError) *OAuthUnknownErrorResponseBody {
	body := &OAuthUnknownErrorResponseBody{
		Err:       res.Err,
		ErrorCode: res.ErrorCode,
		Success:   res.Success,
	}
	return body
}

// NewOAuthOauthPayload builds a oAuth service oAuth endpoint payload.
func NewOAuthOauthPayload(body *OAuthRequestBody) *oauth.OauthPayload {
	v := &oauth.OauthPayload{
		ClientID:     *body.ClientID,
		ClientSecret: *body.ClientSecret,
		GrantType:    *body.GrantType,
	}

	return v
}

// ValidateOAuthRequestBody runs the validations defined on OAuthRequestBody
func ValidateOAuthRequestBody(body *OAuthRequestBody) (err error) {
	if body.ClientID == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("client_id", "body"))
	}
	if body.ClientSecret == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("client_secret", "body"))
	}
	if body.GrantType == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("grant_type", "body"))
	}
	return
}
