// Code generated by goa v3.5.2, DO NOT EDIT.
//
// boProducts HTTP client types
//
// Command:
// $ goa gen api_crud/design

package client

import (
	boproducts "api_crud/gen/bo_products"
	"unicode/utf8"

	goa "goa.design/goa/v3/pkg"
)

// CreateProductRequestBody is the type of the "boProducts" service
// "createProduct" endpoint HTTP request body.
type CreateProductRequestBody struct {
	Product *PayloadProductRequestBody `form:"product" json:"product" xml:"product"`
}

// UpdateProductRequestBody is the type of the "boProducts" service
// "updateProduct" endpoint HTTP request body.
type UpdateProductRequestBody struct {
	Product *PayloadProductRequestBody `form:"product" json:"product" xml:"product"`
}

// GetAllProductsResponseBody is the type of the "boProducts" service
// "getAllProducts" endpoint HTTP response body.
type GetAllProductsResponseBody struct {
	// All products by category
	Products []*ResBoProductResponseBody `form:"products,omitempty" json:"products,omitempty" xml:"products,omitempty"`
	Success  *bool                       `form:"success,omitempty" json:"success,omitempty" xml:"success,omitempty"`
}

// GetAllProductsByCategoryResponseBody is the type of the "boProducts" service
// "getAllProductsByCategory" endpoint HTTP response body.
type GetAllProductsByCategoryResponseBody struct {
	// Result is an array of object
	Products []*ResBoProductResponseBody `form:"products,omitempty" json:"products,omitempty" xml:"products,omitempty"`
	Success  *bool                       `form:"success,omitempty" json:"success,omitempty" xml:"success,omitempty"`
}

// DeleteProductResponseBody is the type of the "boProducts" service
// "deleteProduct" endpoint HTTP response body.
type DeleteProductResponseBody struct {
	Success *bool `form:"success,omitempty" json:"success,omitempty" xml:"success,omitempty"`
}

// CreateProductResponseBody is the type of the "boProducts" service
// "createProduct" endpoint HTTP response body.
type CreateProductResponseBody struct {
	// Result is an object
	Product *ResBoProductResponseBody `form:"product,omitempty" json:"product,omitempty" xml:"product,omitempty"`
	Success *bool                     `form:"success,omitempty" json:"success,omitempty" xml:"success,omitempty"`
}

// UpdateProductResponseBody is the type of the "boProducts" service
// "updateProduct" endpoint HTTP response body.
type UpdateProductResponseBody struct {
	// Result is an Object
	Product *ResBoProductResponseBody `form:"product,omitempty" json:"product,omitempty" xml:"product,omitempty"`
	Success *bool                     `form:"success,omitempty" json:"success,omitempty" xml:"success,omitempty"`
}

// GetProductResponseBody is the type of the "boProducts" service "getProduct"
// endpoint HTTP response body.
type GetProductResponseBody struct {
	// Result is an object
	Product *ResBoProductResponseBody `form:"product,omitempty" json:"product,omitempty" xml:"product,omitempty"`
	Success *bool                     `form:"success,omitempty" json:"success,omitempty" xml:"success,omitempty"`
}

// GetAllProductsUnknownErrorResponseBody is the type of the "boProducts"
// service "getAllProducts" endpoint HTTP response body for the "unknown_error"
// error.
type GetAllProductsUnknownErrorResponseBody struct {
	Err       *string `form:"err,omitempty" json:"err,omitempty" xml:"err,omitempty"`
	ErrorCode *string `form:"error_code,omitempty" json:"error_code,omitempty" xml:"error_code,omitempty"`
	Success   *bool   `form:"success,omitempty" json:"success,omitempty" xml:"success,omitempty"`
}

// GetAllProductsByCategoryUnknownErrorResponseBody is the type of the
// "boProducts" service "getAllProductsByCategory" endpoint HTTP response body
// for the "unknown_error" error.
type GetAllProductsByCategoryUnknownErrorResponseBody struct {
	Err       *string `form:"err,omitempty" json:"err,omitempty" xml:"err,omitempty"`
	ErrorCode *string `form:"error_code,omitempty" json:"error_code,omitempty" xml:"error_code,omitempty"`
	Success   *bool   `form:"success,omitempty" json:"success,omitempty" xml:"success,omitempty"`
}

// DeleteProductUnknownErrorResponseBody is the type of the "boProducts"
// service "deleteProduct" endpoint HTTP response body for the "unknown_error"
// error.
type DeleteProductUnknownErrorResponseBody struct {
	Err       *string `form:"err,omitempty" json:"err,omitempty" xml:"err,omitempty"`
	ErrorCode *string `form:"error_code,omitempty" json:"error_code,omitempty" xml:"error_code,omitempty"`
	Success   *bool   `form:"success,omitempty" json:"success,omitempty" xml:"success,omitempty"`
}

// CreateProductUnknownErrorResponseBody is the type of the "boProducts"
// service "createProduct" endpoint HTTP response body for the "unknown_error"
// error.
type CreateProductUnknownErrorResponseBody struct {
	Err       *string `form:"err,omitempty" json:"err,omitempty" xml:"err,omitempty"`
	ErrorCode *string `form:"error_code,omitempty" json:"error_code,omitempty" xml:"error_code,omitempty"`
	Success   *bool   `form:"success,omitempty" json:"success,omitempty" xml:"success,omitempty"`
}

// UpdateProductUnknownErrorResponseBody is the type of the "boProducts"
// service "updateProduct" endpoint HTTP response body for the "unknown_error"
// error.
type UpdateProductUnknownErrorResponseBody struct {
	Err       *string `form:"err,omitempty" json:"err,omitempty" xml:"err,omitempty"`
	ErrorCode *string `form:"error_code,omitempty" json:"error_code,omitempty" xml:"error_code,omitempty"`
	Success   *bool   `form:"success,omitempty" json:"success,omitempty" xml:"success,omitempty"`
}

// GetProductUnknownErrorResponseBody is the type of the "boProducts" service
// "getProduct" endpoint HTTP response body for the "unknown_error" error.
type GetProductUnknownErrorResponseBody struct {
	Err       *string `form:"err,omitempty" json:"err,omitempty" xml:"err,omitempty"`
	ErrorCode *string `form:"error_code,omitempty" json:"error_code,omitempty" xml:"error_code,omitempty"`
	Success   *bool   `form:"success,omitempty" json:"success,omitempty" xml:"success,omitempty"`
}

// ResBoProductResponseBody is used to define fields on response body types.
type ResBoProductResponseBody struct {
	ID       *string  `form:"id,omitempty" json:"id,omitempty" xml:"id,omitempty"`
	Name     *string  `form:"name,omitempty" json:"name,omitempty" xml:"name,omitempty"`
	Price    *float64 `form:"price,omitempty" json:"price,omitempty" xml:"price,omitempty"`
	Cover    *string  `form:"cover,omitempty" json:"cover,omitempty" xml:"cover,omitempty"`
	Category *string  `form:"category,omitempty" json:"category,omitempty" xml:"category,omitempty"`
}

// PayloadProductRequestBody is used to define fields on request body types.
type PayloadProductRequestBody struct {
	Name     string  `form:"name" json:"name" xml:"name"`
	Price    float64 `form:"price" json:"price" xml:"price"`
	Cover    string  `form:"cover" json:"cover" xml:"cover"`
	Category string  `form:"category" json:"category" xml:"category"`
}

// NewCreateProductRequestBody builds the HTTP request body from the payload of
// the "createProduct" endpoint of the "boProducts" service.
func NewCreateProductRequestBody(p *boproducts.CreateProductPayload) *CreateProductRequestBody {
	body := &CreateProductRequestBody{}
	if p.Product != nil {
		body.Product = marshalBoproductsPayloadProductToPayloadProductRequestBody(p.Product)
	}
	return body
}

// NewUpdateProductRequestBody builds the HTTP request body from the payload of
// the "updateProduct" endpoint of the "boProducts" service.
func NewUpdateProductRequestBody(p *boproducts.UpdateProductPayload) *UpdateProductRequestBody {
	body := &UpdateProductRequestBody{}
	if p.Product != nil {
		body.Product = marshalBoproductsPayloadProductToPayloadProductRequestBody(p.Product)
	}
	return body
}

// NewGetAllProductsResultOK builds a "boProducts" service "getAllProducts"
// endpoint result from a HTTP "OK" response.
func NewGetAllProductsResultOK(body *GetAllProductsResponseBody) *boproducts.GetAllProductsResult {
	v := &boproducts.GetAllProductsResult{
		Success: *body.Success,
	}
	v.Products = make([]*boproducts.ResBoProduct, len(body.Products))
	for i, val := range body.Products {
		v.Products[i] = unmarshalResBoProductResponseBodyToBoproductsResBoProduct(val)
	}

	return v
}

// NewGetAllProductsUnknownError builds a boProducts service getAllProducts
// endpoint unknown_error error.
func NewGetAllProductsUnknownError(body *GetAllProductsUnknownErrorResponseBody) *boproducts.UnknownError {
	v := &boproducts.UnknownError{
		Err:       *body.Err,
		ErrorCode: *body.ErrorCode,
		Success:   *body.Success,
	}

	return v
}

// NewGetAllProductsByCategoryResultOK builds a "boProducts" service
// "getAllProductsByCategory" endpoint result from a HTTP "OK" response.
func NewGetAllProductsByCategoryResultOK(body *GetAllProductsByCategoryResponseBody) *boproducts.GetAllProductsByCategoryResult {
	v := &boproducts.GetAllProductsByCategoryResult{
		Success: *body.Success,
	}
	v.Products = make([]*boproducts.ResBoProduct, len(body.Products))
	for i, val := range body.Products {
		v.Products[i] = unmarshalResBoProductResponseBodyToBoproductsResBoProduct(val)
	}

	return v
}

// NewGetAllProductsByCategoryUnknownError builds a boProducts service
// getAllProductsByCategory endpoint unknown_error error.
func NewGetAllProductsByCategoryUnknownError(body *GetAllProductsByCategoryUnknownErrorResponseBody) *boproducts.UnknownError {
	v := &boproducts.UnknownError{
		Err:       *body.Err,
		ErrorCode: *body.ErrorCode,
		Success:   *body.Success,
	}

	return v
}

// NewDeleteProductResultOK builds a "boProducts" service "deleteProduct"
// endpoint result from a HTTP "OK" response.
func NewDeleteProductResultOK(body *DeleteProductResponseBody) *boproducts.DeleteProductResult {
	v := &boproducts.DeleteProductResult{
		Success: *body.Success,
	}

	return v
}

// NewDeleteProductUnknownError builds a boProducts service deleteProduct
// endpoint unknown_error error.
func NewDeleteProductUnknownError(body *DeleteProductUnknownErrorResponseBody) *boproducts.UnknownError {
	v := &boproducts.UnknownError{
		Err:       *body.Err,
		ErrorCode: *body.ErrorCode,
		Success:   *body.Success,
	}

	return v
}

// NewCreateProductResultCreated builds a "boProducts" service "createProduct"
// endpoint result from a HTTP "Created" response.
func NewCreateProductResultCreated(body *CreateProductResponseBody) *boproducts.CreateProductResult {
	v := &boproducts.CreateProductResult{
		Success: *body.Success,
	}
	v.Product = unmarshalResBoProductResponseBodyToBoproductsResBoProduct(body.Product)

	return v
}

// NewCreateProductUnknownError builds a boProducts service createProduct
// endpoint unknown_error error.
func NewCreateProductUnknownError(body *CreateProductUnknownErrorResponseBody) *boproducts.UnknownError {
	v := &boproducts.UnknownError{
		Err:       *body.Err,
		ErrorCode: *body.ErrorCode,
		Success:   *body.Success,
	}

	return v
}

// NewUpdateProductResultOK builds a "boProducts" service "updateProduct"
// endpoint result from a HTTP "OK" response.
func NewUpdateProductResultOK(body *UpdateProductResponseBody) *boproducts.UpdateProductResult {
	v := &boproducts.UpdateProductResult{
		Success: *body.Success,
	}
	v.Product = unmarshalResBoProductResponseBodyToBoproductsResBoProduct(body.Product)

	return v
}

// NewUpdateProductUnknownError builds a boProducts service updateProduct
// endpoint unknown_error error.
func NewUpdateProductUnknownError(body *UpdateProductUnknownErrorResponseBody) *boproducts.UnknownError {
	v := &boproducts.UnknownError{
		Err:       *body.Err,
		ErrorCode: *body.ErrorCode,
		Success:   *body.Success,
	}

	return v
}

// NewGetProductResultOK builds a "boProducts" service "getProduct" endpoint
// result from a HTTP "OK" response.
func NewGetProductResultOK(body *GetProductResponseBody) *boproducts.GetProductResult {
	v := &boproducts.GetProductResult{
		Success: *body.Success,
	}
	v.Product = unmarshalResBoProductResponseBodyToBoproductsResBoProduct(body.Product)

	return v
}

// NewGetProductUnknownError builds a boProducts service getProduct endpoint
// unknown_error error.
func NewGetProductUnknownError(body *GetProductUnknownErrorResponseBody) *boproducts.UnknownError {
	v := &boproducts.UnknownError{
		Err:       *body.Err,
		ErrorCode: *body.ErrorCode,
		Success:   *body.Success,
	}

	return v
}

// ValidateGetAllProductsResponseBody runs the validations defined on
// GetAllProductsResponseBody
func ValidateGetAllProductsResponseBody(body *GetAllProductsResponseBody) (err error) {
	if body.Products == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("products", "body"))
	}
	if body.Success == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("success", "body"))
	}
	for _, e := range body.Products {
		if e != nil {
			if err2 := ValidateResBoProductResponseBody(e); err2 != nil {
				err = goa.MergeErrors(err, err2)
			}
		}
	}
	return
}

// ValidateGetAllProductsByCategoryResponseBody runs the validations defined on
// GetAllProductsByCategoryResponseBody
func ValidateGetAllProductsByCategoryResponseBody(body *GetAllProductsByCategoryResponseBody) (err error) {
	if body.Products == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("products", "body"))
	}
	if body.Success == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("success", "body"))
	}
	for _, e := range body.Products {
		if e != nil {
			if err2 := ValidateResBoProductResponseBody(e); err2 != nil {
				err = goa.MergeErrors(err, err2)
			}
		}
	}
	return
}

// ValidateDeleteProductResponseBody runs the validations defined on
// DeleteProductResponseBody
func ValidateDeleteProductResponseBody(body *DeleteProductResponseBody) (err error) {
	if body.Success == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("success", "body"))
	}
	return
}

// ValidateCreateProductResponseBody runs the validations defined on
// CreateProductResponseBody
func ValidateCreateProductResponseBody(body *CreateProductResponseBody) (err error) {
	if body.Product == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("product", "body"))
	}
	if body.Success == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("success", "body"))
	}
	if body.Product != nil {
		if err2 := ValidateResBoProductResponseBody(body.Product); err2 != nil {
			err = goa.MergeErrors(err, err2)
		}
	}
	return
}

// ValidateUpdateProductResponseBody runs the validations defined on
// UpdateProductResponseBody
func ValidateUpdateProductResponseBody(body *UpdateProductResponseBody) (err error) {
	if body.Product == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("product", "body"))
	}
	if body.Success == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("success", "body"))
	}
	if body.Product != nil {
		if err2 := ValidateResBoProductResponseBody(body.Product); err2 != nil {
			err = goa.MergeErrors(err, err2)
		}
	}
	return
}

// ValidateGetProductResponseBody runs the validations defined on
// GetProductResponseBody
func ValidateGetProductResponseBody(body *GetProductResponseBody) (err error) {
	if body.Product == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("product", "body"))
	}
	if body.Success == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("success", "body"))
	}
	if body.Product != nil {
		if err2 := ValidateResBoProductResponseBody(body.Product); err2 != nil {
			err = goa.MergeErrors(err, err2)
		}
	}
	return
}

// ValidateGetAllProductsUnknownErrorResponseBody runs the validations defined
// on getAllProducts_unknown_error_response_body
func ValidateGetAllProductsUnknownErrorResponseBody(body *GetAllProductsUnknownErrorResponseBody) (err error) {
	if body.Err == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("err", "body"))
	}
	if body.Success == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("success", "body"))
	}
	if body.ErrorCode == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("error_code", "body"))
	}
	return
}

// ValidateGetAllProductsByCategoryUnknownErrorResponseBody runs the
// validations defined on getAllProductsByCategory_unknown_error_response_body
func ValidateGetAllProductsByCategoryUnknownErrorResponseBody(body *GetAllProductsByCategoryUnknownErrorResponseBody) (err error) {
	if body.Err == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("err", "body"))
	}
	if body.Success == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("success", "body"))
	}
	if body.ErrorCode == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("error_code", "body"))
	}
	return
}

// ValidateDeleteProductUnknownErrorResponseBody runs the validations defined
// on deleteProduct_unknown_error_response_body
func ValidateDeleteProductUnknownErrorResponseBody(body *DeleteProductUnknownErrorResponseBody) (err error) {
	if body.Err == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("err", "body"))
	}
	if body.Success == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("success", "body"))
	}
	if body.ErrorCode == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("error_code", "body"))
	}
	return
}

// ValidateCreateProductUnknownErrorResponseBody runs the validations defined
// on createProduct_unknown_error_response_body
func ValidateCreateProductUnknownErrorResponseBody(body *CreateProductUnknownErrorResponseBody) (err error) {
	if body.Err == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("err", "body"))
	}
	if body.Success == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("success", "body"))
	}
	if body.ErrorCode == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("error_code", "body"))
	}
	return
}

// ValidateUpdateProductUnknownErrorResponseBody runs the validations defined
// on updateProduct_unknown_error_response_body
func ValidateUpdateProductUnknownErrorResponseBody(body *UpdateProductUnknownErrorResponseBody) (err error) {
	if body.Err == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("err", "body"))
	}
	if body.Success == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("success", "body"))
	}
	if body.ErrorCode == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("error_code", "body"))
	}
	return
}

// ValidateGetProductUnknownErrorResponseBody runs the validations defined on
// getProduct_unknown_error_response_body
func ValidateGetProductUnknownErrorResponseBody(body *GetProductUnknownErrorResponseBody) (err error) {
	if body.Err == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("err", "body"))
	}
	if body.Success == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("success", "body"))
	}
	if body.ErrorCode == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("error_code", "body"))
	}
	return
}

// ValidateResBoProductResponseBody runs the validations defined on
// resBoProductResponseBody
func ValidateResBoProductResponseBody(body *ResBoProductResponseBody) (err error) {
	if body.ID == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("id", "body"))
	}
	if body.Name == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("name", "body"))
	}
	if body.Price == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("price", "body"))
	}
	if body.Cover == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("cover", "body"))
	}
	if body.Category == nil {
		err = goa.MergeErrors(err, goa.MissingFieldError("category", "body"))
	}
	if body.ID != nil {
		err = goa.MergeErrors(err, goa.ValidateFormat("body.id", *body.ID, goa.FormatUUID))
	}
	return
}

// ValidatePayloadProductRequestBody runs the validations defined on
// payloadProductRequestBody
func ValidatePayloadProductRequestBody(body *PayloadProductRequestBody) (err error) {
	if utf8.RuneCountInString(body.Name) < 3 {
		err = goa.MergeErrors(err, goa.InvalidLengthError("body.name", body.Name, utf8.RuneCountInString(body.Name), 3, true))
	}
	if body.Price < 0 {
		err = goa.MergeErrors(err, goa.InvalidRangeError("body.price", body.Price, 0, true))
	}
	if !(body.Category == "men" || body.Category == "women" || body.Category == "hat" || body.Category == "jacket" || body.Category == "sneaker" || body.Category == "nothing") {
		err = goa.MergeErrors(err, goa.InvalidEnumValueError("body.category", body.Category, []interface{}{"men", "women", "hat", "jacket", "sneaker", "nothing"}))
	}
	return
}
