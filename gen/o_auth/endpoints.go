// Code generated by goa v3.10.2, DO NOT EDIT.
//
// oAuth endpoints
//
// Command:
// $ goa gen starter-pack-goa/design

package oauth

import (
	"context"

	goa "goa.design/goa/v3/pkg"
)

// Endpoints wraps the "oAuth" service endpoints.
type Endpoints struct {
	OAuth goa.Endpoint
}

// NewEndpoints wraps the methods of the "oAuth" service with endpoints.
func NewEndpoints(s Service) *Endpoints {
	return &Endpoints{
		OAuth: NewOAuthEndpoint(s),
	}
}

// Use applies the given middleware to all the "oAuth" service endpoints.
func (e *Endpoints) Use(m func(goa.Endpoint) goa.Endpoint) {
	e.OAuth = m(e.OAuth)
}

// NewOAuthEndpoint returns an endpoint function that calls the method "oAuth"
// of service "oAuth".
func NewOAuthEndpoint(s Service) goa.Endpoint {
	return func(ctx context.Context, req interface{}) (interface{}, error) {
		p := req.(*OauthPayload)
		return s.OAuth(ctx, p)
	}
}
