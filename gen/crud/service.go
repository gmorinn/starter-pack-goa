// Code generated by goa v3.5.2, DO NOT EDIT.
//
// crud service
//
// Command:
// $ goa gen api_crud/design

package crud

import (
	"context"
)

// The principe of CRUD API with GET, PUT, POST, DELETE
type Service interface {
	// Read Book
	GetBook(context.Context, *GetBookPayload) (res *BookResponse, err error)
	// Read All Books
	GetAllBooks(context.Context) (res []*BookResponse, err error)
	// Delete Book
	DeleteBook(context.Context, string) (err error)
	// Create Book
	CreateBook(context.Context, *CreateBookPayload) (res *BookResponse, err error)
}

// ServiceName is the name of the service as defined in the design. This is the
// same value that is set in the endpoint request contexts under the ServiceKey
// key.
const ServiceName = "crud"

// MethodNames lists the service method names as defined in the design. These
// are the same values that are set in the endpoint request contexts under the
// MethodKey key.
var MethodNames = [4]string{"getBook", "getAllBooks", "deleteBook", "createBook"}

// GetBookPayload is the payload type of the crud service getBook method.
type GetBookPayload struct {
	// Unique Id Book
	ID string
}

// BookResponse is the result type of the crud service getBook method.
type BookResponse struct {
	ID    *string
	Name  *string
	Price *float64
}

// CreateBookPayload is the payload type of the crud service createBook method.
type CreateBookPayload struct {
	Name  *string
	Price *float64
}

// CannotConvertStringToUuid is the error returned when id paramater is bad
type CannotConvertStringToUUID struct {
	// Returning error
	Message string
	// Wrong Id
	ID string
}

// IdDoesntExist is the error returned when 0 book have the id corresponding
type IDDoesntExist struct {
	// Returning error
	Message string
	// Wrong Id
	ID string
}

// Error returns an error description.
func (e *CannotConvertStringToUUID) Error() string {
	return "CannotConvertStringToUuid is the error returned when id paramater is bad"
}

// ErrorName returns "CannotConvertStringToUuid".
func (e *CannotConvertStringToUUID) ErrorName() string {
	return "cannot_convert_string_to_uuid"
}

// Error returns an error description.
func (e *IDDoesntExist) Error() string {
	return "IdDoesntExist is the error returned when 0 book have the id corresponding"
}

// ErrorName returns "IdDoesntExist".
func (e *IDDoesntExist) ErrorName() string {
	return "id_doesnt_exist"
}
